{"version":3,"sources":["components/map/mapUtils.js","components/ServiceIconMap.js","images/flag_icon.png","components/ProfilePicture.js","components/map/BookWindow.js","components/map/ServiceWindow.js","components/map/Map.js","components/FilterList.js","components/ServiceCard.js","hooks/useForm.js","components/ServiceList.js","pages/Home.js","images/servus_text.svg","components/Header.js","pages/Login.js","pages/SignUp.js","components/Calendar.js","pages/Appointments.js","pages/Account.js","components/ImageBoard.js","components/AddService.js","components/UserInfo.js","pages/Profile.js","App.js","index.js"],"names":["winnipeg","lat","lng","mapLibraries","autocompleteOptions","bounds","north","south","east","west","componentRestrictions","country","fields","origin","strictBounds","mapOptions","mapTypeControl","disableDefaultUI","zoomControl","styles","mapStyle","serviceIconMap","place","component","Place","path","mdiMapMarker","audiotrack","Audiotrack","mdiMusicNoteEighth","build","Build","mdiWrench","cake","Cake","mdiCake","childfriendly","ChildFriendly","mdiBabyCarriage","commute","Commute","mdiTrainCar","computer","Computer","mdiLaptop","home","Home","mdiHome","hotel","Hotel","mdiBed","localflorist","LocalFlorist","mdiFlower","localpizza","LocalPizza","mdiPizza","mail","Mail","mdiEmail","formatPaint","FormatPaint","mdiFormatPaint","palette","Palette","mdiPalette","restaurant","Restaurant","mdiSilverwareForkKnife","school","School","mdiSchool","shoppingcart","ShoppingCart","mdiCart","videogameasset","VideogameAsset","mdiGamepadSquare","localoffer","LocalOffer","mdiTag","sportshockey","SportsHockey","mdiHockeySticks","terrain","Terrain","mdiTerrain","directionsbike","DirectionsBike","mdiBike","useStyles","makeStyles","pic","width","height","padding","icon","ProfilePicture","props","classes","useState","image","setImage","getImages","a","axios","get","username","response","data","result","useEffect","className","container","src","process","imageData","AccountBox","theme","createMuiTheme","type","primary","main","secondary","default","background","dark","typography","fontFamily","window","margin","display","alignItems","innerwindow","justifyContent","textField","marginLeft","spacing","marginRight","formControl","userIcon","title","marginTop","fontSize","color","divider","close","position","top","right","submit","BookWindow","date","setDate","time","timeState","setTime","timepicker","setTimepicker","valid","setValid","errors","setErrors","useCookies","cookies","duration_hours","service","duration","slice","duration_minutes","displayTimePicker","removeItemOnce","arr","value","index","indexOf","splice","time_array","addTimeSlices","avail","availability","weekday","day","start_time","moment","end_time","apt_time","add","curr_time","push","format","removeConflictingTimes","_id","appt","res","available_times","apt_date","booked_time","apt_end_date","isSame","i","extracted_date","extracted_time","booking_date","booking_date_end","FormControl","InputLabel","id","inputLabel","Select","labelId","onChange","x","handleChangeTime","map","MenuItem","toDate","post","service_id","provider","withCredentials","then","alert","catch","err","toggle","bookAppointment","target","apptDuration","console","log","ThemeProvider","Typography","variant","name","noValidate","utils","MomentUtils","DatePicker","label","initialFocusedDate","Date","now","onAccept","autoOk","disablePast","shouldDisableDate","Button","onClick","Object","getOwnPropertyNames","length","StyledRating","withStyles","iconFilled","iconHover","Rating","overflow","maxWidth","upperRow","lowerRow","textAlign","iconButton","info","flexDirection","infoBar","modal","cursor","desc","box","innerBox","lineHeight","book","ServiceWindow","getAvgRating","sum","len","rating","seen","setSeen","ratings","setRating","togglePop","changePage","history","addRating","val","put","IconButton","Box","ml","getLabelText","e","precision","Favorite","align","cost","description","Modal","open","aria-labelledby","aria-describedby","root","backgroundColor","paddingLeft","autocomplete","addressContainer","mapContainer","button","bottom","borderRadius","Map","center","setCenter","allServices","prevWindow","isLoaded","useJsApiLoader","libraries","googleMapsApiKey","marker","useRef","onMapLoad","useCallback","getUserLocation","current","google","maps","Marker","anchorPoint","Point","services","div","document","createElement","contentString","ReactDOM","render","infowindow","InfoWindow","content","markerIcon","icon_name","fillColor","fillOpacity","strokeWeight","scale","ServiceIcon","serviceMarker","location","visible","addListener","onAutoCompleteLoad","autocompleteLoaded","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","selected_service","event","trigger","setPosition","setVisible","mapContainerClassName","zoom","onLoad","options","onPlaceChanged","getPlace","geometry","TextField","tagNames","cardView","chip","textTransform","formatDuration","hours","parseInt","charAt","minutes","toString","ServiceCard","serviceTags","tags","expanded","setExpanded","booking","setBooking","toggleBooking","Card","tagData","Chip","size","selected","disabled","expand","expandedInfo","bookable","useForm","initialValues","values","setValues","evt","rootPanel","breakpoints","up","minWidth","down","rootList","filters","searchBar","searchIcon","searchInput","flex","tagChip","bullet","listItemClass","ServiceList","setServices","selectedIndex","setSelectedIndex","setServiceTags","activeFilters","change","setChange","search","searchForm","setSearchForm","style","getServices","loadChips","Paper","tag","addFilter","includes","aria-label","FilterList","InputBase","placeholder","onKeyDown","key","Search","Divider","orientation","List","setSelectedService","ListItem","serviceCard","withRouter","useHistory","setService","flexGrow","logo","menuButton","mobile","headerOptions","anchorEl","setAnchorEl","Boolean","useTheme","isMobile","useMediaQuery","handleButtonClick","pageURL","menuItems","menuTitle","Toolbar","CompanyTitle","edge","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","menuItem","handleMenuClick","marginBottom","Login","formValid","setFormValid","password","loginForm","onFormChange","login","setUsername","error","autoComplete","SignUp","confirmPassword","firstName","lastName","signUpForm","createAccount","status","helperText","DayScaleCell","fontWeight","cell","userSelect","verticalAlign","borderBottom","borderLeft","paddingRight","fade","outline","text","opacity","appointment","apptContent","whiteSpace","flexibleSpace","flexContainer","tooltipContent","paddingTop","paper","boxSizing","tooltipText","body2","h6","fontWeightBold","textOverflow","action","active","circle","textCenter","dateAndTitle","titleContainer","paddingBottom","CellBase","React","memo","startDate","formatDate","otherMonth","formatOptions","getDate","month","TableCell","tabIndex","classNames","TimeTableCell","Appointment","restProps","AppointmentContent","scheduler","FlexibleSpace","getRandomColor","Math","floor","random","setColor","Calendar","appointments","apptData","setApptData","providers","setProviders","newDate","commitDeletes","deleted","delete","filter","passInfo","forEach","apt","seedrandom","global","newProvider","buyer","endDate","getTime","tempObj","ownerId","resources","fieldName","instances","onCommitChanges","defaultCurrentDate","timeTableCellComponent","dayScaleCellComponent","appointmentComponent","appointmentContentComponent","flexibleSpaceComponent","showCloseButton","showDeleteButton","setAppointments","fetchAppointments","passwordTextField","buttonContainer","passwordContainer","accountBtn","left","arrowIcon","bio","Account","removeCookie","passwordErrors","setPasswordErrors","passwordValid","setPasswordValid","updatingPassword","setUpdatingPassword","form","setForm","updatePassword","updateInfo","Input","imageFormObj","FormData","append","files","uploadImage","multiline","rowsMax","ArrowBack","inputRoot","btn","gridList","alignContent","inputStyles","input","ImageBoard","images","setImages","inputclasses","targetUsername","useParams","sort","b","uploadDate","GridList","cellHeight","cols","oneImage","GridListTile","FilledInput","timeField","timeContainer","addressSearch","addressField","servicesContainer","serviceForm","durationSelect","tagSelectLabel","tagSelect","tagSelectText","chips","flexWrap","iconGrid","daysContainer","dayButton","selectedDayButton","timesContainer","addButton","getStyles","fontWeightRegular","fontWeightMedium","days","AddService","addedService","setLocation","serviceIconName","setServiceIconName","setDay","availabilities","setAvailabilities","onServiceFormChange","serviceDuration","setServiceDuration","serviceDisplayDuration","setServiceDisplayDuration","servicesErrors","setServiceErrors","serviceFormValid","setServiceFormValid","buildAvailabilities","requestAvailabilities","startTime","endTime","address","durationOptions","Grid","names","keys","gridItems","item","selectableIcon","iconName","getGridItem","getGridItems","formattedTime","find","handleDurationChange","address_components","short_name","ButtonGroup","currDay","changeDay","dayIndex","temp","InputLabelProps","shrink","inputProps","step","timePickers","addEmptyAvailability","multiple","MenuProps","getContentAnchorEl","renderValue","onDelete","chipToDelete","onMouseDown","stopPropagation","userInfo","userIconContainer","userDesc","servicesTitle","setServiceList","addingService","setAddingService","serviceList","handleListItemClick","UserInfo","user","userContainer","elevation","settingsIcon","Profile","setUser","Settings","dotenv","config","App","basename","exact","from","defaults","baseURL","headers","common","rootElement","getElementById","StrictMode","CssBaseline"],"mappings":"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","file":"static/js/main.7a9fd7ed.chunk.js","sourcesContent":["import mapStyle from './mapStyle.json';\n\nexport const winnipeg = {\n    lat: 49.8951,\n    lng: -97.1384,\n};\n\nexport const mapLibraries = ['places'];\n\nexport const defaultBounds = {\n    north: winnipeg.lat + 1.0,\n    south: winnipeg.lat - 1.0,\n    east: winnipeg.lng + 1.0,\n    west: winnipeg.lng - 1.0,\n};\n\nexport const autocompleteOptions = {\n    bounds: defaultBounds,\n    componentRestrictions: { country: 'ca' },\n    fields: ['address_components', 'geometry', 'icon', 'name'],\n    origin: winnipeg,\n    strictBounds: true,\n};\n\nexport const mapOptions = {\n    mapTypeControl: false,\n    disableDefaultUI: true,\n    zoomControl: true,\n    styles: mapStyle,\n};\n","import React from 'react';\nimport {\n    mdiMapMarker,\n    mdiMusicNoteEighth,\n    mdiWrench,\n    mdiCake,\n    mdiFlower,\n    mdiPizza,\n    mdiTrainCar,\n    mdiBabyCarriage,\n    mdiLaptop,\n    mdiHome,\n    mdiBed,\n    mdiEmail,\n    mdiPalette,\n    mdiFormatPaint,\n    mdiSilverwareForkKnife,\n    mdiSchool,\n    mdiCart,\n    mdiGamepadSquare,\n    mdiHockeySticks,\n    mdiTag,\n    mdiTerrain,\n    mdiBike,\n} from '@mdi/js';\nimport {\n    Place,\n    Audiotrack,\n    Build,\n    Cake,\n    ChildFriendly,\n    Commute,\n    Computer,\n    Home,\n    Hotel,\n    LocalFlorist,\n    LocalPizza,\n    Mail,\n    FormatPaint,\n    Palette,\n    Restaurant,\n    School,\n    ShoppingCart,\n    VideogameAsset,\n    LocalOffer,\n    Terrain,\n    DirectionsBike,\n    SportsHockey,\n} from '@material-ui/icons';\n\nexport const serviceIconMap = {\n    place: { component: <Place />, path: mdiMapMarker },\n    audiotrack: { component: <Audiotrack />, path: mdiMusicNoteEighth },\n    build: { component: <Build />, path: mdiWrench },\n    cake: { component: <Cake />, path: mdiCake },\n    childfriendly: { component: <ChildFriendly />, path: mdiBabyCarriage },\n    commute: { component: <Commute />, path: mdiTrainCar },\n    computer: { component: <Computer />, path: mdiLaptop },\n    home: { component: <Home />, path: mdiHome },\n    hotel: { component: <Hotel />, path: mdiBed },\n    localflorist: { component: <LocalFlorist />, path: mdiFlower },\n    localpizza: { component: <LocalPizza />, path: mdiPizza },\n    mail: { component: <Mail />, path: mdiEmail },\n    formatPaint: { component: <FormatPaint />, path: mdiFormatPaint },\n    palette: { component: <Palette />, path: mdiPalette },\n    restaurant: { component: <Restaurant />, path: mdiSilverwareForkKnife },\n    school: { component: <School />, path: mdiSchool },\n    shoppingcart: { component: <ShoppingCart />, path: mdiCart },\n    videogameasset: { component: <VideogameAsset />, path: mdiGamepadSquare },\n    localoffer: { component: <LocalOffer />, path: mdiTag },\n    sportshockey: { component: <SportsHockey />, path: mdiHockeySticks },\n    terrain: { component: <Terrain />, path: mdiTerrain },\n    directionsbike: { component: <DirectionsBike />, path: mdiBike },\n};\n\nexport default serviceIconMap;\n","export default __webpack_public_path__ + \"static/media/flag_icon.84b48c77.png\";","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AccountBox } from '@material-ui/icons/';\n\nconst useStyles = makeStyles(() => ({\n    pic: {\n        width: 96,\n        height: 96,\n        padding: 5,\n    },\n    icon: {\n        width: 96,\n        height: 96,\n    },\n}));\n\nconst ProfilePicture = props => {\n    const classes = useStyles();\n    const [image, setImage] = useState(null);\n\n    const getImages = async () => {\n        const response = await axios.get(`/images/${props.username}/profile`);\n        setImage(response.data.result);\n    };\n\n    useEffect(() => {\n        getImages();\n    }, [props.username]);\n\n    return (\n        <div className={classes.container}>\n            {image ? (\n                <img\n                    src={`${process.env.REACT_APP_API_HOST}/${image.imageData}`}\n                    className={classes.pic}\n                />\n            ) : (\n                <AccountBox className={classes.icon} />\n            )}\n        </div>\n    );\n};\n\nexport default ProfilePicture;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    ThemeProvider,\n    Button,\n    Select,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport { useCookies } from 'react-cookie';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    window: {\n        margin: '50',\n        display: 'flex',\n        alignItems: 'center',\n        'flex-direction': 'column',\n        width: '100%',\n        height: '100%',\n        background: theme.background.main,\n    },\n    innerwindow: {\n        display: 'flex',\n        height: '100%',\n        'flex-direction': 'column',\n        justifyContent: 'space-evenly',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        'flex-direction': 'column',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '100%',\n    },\n    formControl: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '100%',\n        height: 40,\n    },\n    userIcon: {\n        height: '96px',\n        width: '96px',\n    },\n    title: {\n        marginTop: '15px',\n        fontSize: '2.5em',\n        color: 'white',\n    },\n    divider: {\n        height: '100%',\n        width: '3',\n        'border-color': theme.background.main,\n    },\n    close: {\n        position: 'absolute',\n        top: 0,\n        right: 10,\n        color: 'white',\n        fontSize: '2em',\n    },\n    submit: {},\n}));\n\nconst BookWindow = props => {\n    // STATES\n    const [date, setDate] = useState();\n    const [timeState, setTime] = useState({\n        time: '',\n    });\n    const [timepicker, setTimepicker] = useState();\n    const classes = useStyles();\n    const [valid, setValid] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const [cookies] = useCookies();\n\n    let duration_hours = props.service.duration.slice(0, 2);\n    let duration_minutes = props.service.duration.slice(2);\n\n    const displayTimePicker = async () => {\n        const removeItemOnce = (arr, value) => {\n            let index = arr.indexOf(value);\n            if (index > -1) {\n                arr.splice(index, 1);\n            }\n            return arr;\n        };\n\n        let time_array = [];\n        const addTimeSlices = () => {\n            for (let avail in props.service.availability) {\n                if (props.service.availability[avail].weekday == date.day()) {\n                    let start_time = moment(\n                        props.service.availability[avail].start_time,\n                        'HH:mm'\n                    );\n                    let end_time = moment(\n                        props.service.availability[avail].end_time,\n                        'HH:mm'\n                    );\n                    let apt_time = moment(start_time)\n                        .add(duration_hours, 'h')\n                        .add(duration_minutes, 'm');\n                    let curr_time = start_time;\n                    while (apt_time <= end_time) {\n                        time_array.push(moment(curr_time).format('HH:mm'));\n                        curr_time.add(30, 'm');\n                        apt_time.add(30, 'm');\n                    }\n                }\n            }\n        };\n        const removeConflictingTimes = async () => {\n            let res = await axios.get(\n                `appointment/service/${props.service._id}`\n            );\n\n            let available_times = [];\n            for (let appt in res.data.result) {\n                let apt_date = moment(res.data.result[appt].booked_time);\n                let apt_end_date = moment(apt_date)\n                    .add(duration_hours, 'h')\n                    .add(duration_minutes, 'm');\n                if (apt_date.isSame(date, 'day')) {\n                    for (let i in time_array) {\n                        let extracted_date = date.format('YYYY-MM-DD');\n                        let extracted_time = moment(\n                            time_array[i],\n                            'HH:mm'\n                        ).format('HH:mm');\n                        let booking_date = moment(\n                            `${extracted_date} ${extracted_time}`,\n                            'YYYY-MM-DD HH:mm'\n                        );\n                        let booking_date_end = moment(booking_date)\n                            .add(duration_hours, 'h')\n                            .add(duration_minutes, 'm');\n\n                        if (\n                            (booking_date >= apt_date &&\n                                booking_date <= apt_end_date) ||\n                            (booking_date_end >= apt_date &&\n                                booking_date_end <= apt_end_date)\n                        ) {\n                            available_times.push(time_array[i]);\n                        }\n                    }\n                }\n            }\n            for (let i in available_times) {\n                removeItemOnce(time_array, available_times[i]);\n            }\n        };\n\n        addTimeSlices();\n        await removeConflictingTimes();\n\n        setTimepicker(\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\" className={classes.inputLabel}>\n                    Appointment Time\n                </InputLabel>\n                <Select\n                    labelId=\"label\"\n                    value={timeState.time}\n                    onChange={x => handleChangeTime(x)}>\n                    {time_array?.map((x, i) => {\n                        return (\n                            <MenuItem key={i} value={x}>\n                                {x}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n        );\n    };\n\n    const bookAppointment = () => {\n        if (valid) {\n            let extracted_date = date.format('YYYY-MM-DD');\n            let extracted_time = moment(timeState.time, 'HH:mm').format(\n                'HH:mm:ss'\n            );\n\n            let booking_date = moment(\n                `${extracted_date} ${extracted_time}`,\n                'YYYY-MM-DD HH:mm:ss'\n            ).toDate();\n            axios\n                .post(\n                    `/appointment/${cookies.username}`,\n                    {\n                        service_id: props.service._id,\n                        provider: props.service.provider,\n                        booked_time: booking_date,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(res => {\n                    if (!res.data.errors) {\n                        alert(\n                            `Successfully booked Service with ${props.service.provider}`\n                        );\n                    }\n                })\n                .catch(err => {\n                    throw err;\n                });\n            props.toggle();\n            setValid(false);\n        }\n    };\n\n    useEffect(() => {\n        if (cookies.username) bookAppointment();\n        if (date) displayTimePicker();\n    }, [valid, date, timeState]);\n\n    const handleChangeTime = x => {\n        setTime({ time: x.target.value });\n    };\n\n    const shouldDisableDay = date => {\n        for (let avail in props.service.availability) {\n            if (props.service.availability[avail].weekday == date.day())\n                return false;\n        }\n        return true;\n    };\n    const validate = () => {\n        let errors = {};\n        if (!date || !timeState.time) {\n            errors.time = 'Date & Time are required';\n        }\n        setErrors(errors);\n        setValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n\n    const handleClick = () => {\n        props.toggle();\n    };\n\n    let apptDuration = `Appointment Duration:`;\n    if (duration_hours === '00')\n        apptDuration = `${apptDuration} ${duration_minutes} mins`;\n    else\n        apptDuration = `${apptDuration} ${duration_hours}:${duration_minutes} hrs`;\n\n    console.log();\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.window}>\n                <Typography variant=\"h1\" className={classes.title}>\n                    {props.service.name}\n                </Typography>\n                <Typography color=\"textSecondary\">{apptDuration}</Typography>\n                <div className={classes.innerwindow}>\n                    <form className={classes.container} noValidate>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <DatePicker\n                                label={'Appointment Date'}\n                                value={date}\n                                initialFocusedDate={Date.now()}\n                                onAccept={setDate}\n                                onChange={setDate}\n                                name=\"date\"\n                                autoOk={true}\n                                disablePast={true}\n                                errors={errors.time}\n                                shouldDisableDate={shouldDisableDay}\n                                className={classes.textField}\n                            />\n                            {timepicker}\n                        </MuiPickersUtilsProvider>\n                    </form>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={validate}>\n                        CONFIRM\n                    </Button>\n                </div>\n                <span className={classes.close} onClick={handleClick}>\n                    &times;{' '}\n                </span>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default BookWindow;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Modal, Box, IconButton } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { Favorite } from '@material-ui/icons/';\nimport ProfilePicture from '../ProfilePicture';\n\nimport BookWindow from './BookWindow';\nimport { useCookies } from 'react-cookie';\n\nconst StyledRating = withStyles({\n    iconFilled: {\n        color: '#ff6d75',\n    },\n    iconHover: {\n        color: '#EC5732',\n    },\n})(Rating);\n\nconst useStyles = makeStyles(() => ({\n    window: {\n        display: 'flex',\n        'flex-direction': 'column',\n        'align-items': 'center',\n        overflow: 'visible',\n        padding: 10,\n        maxWidth: '200',\n    },\n    upperRow: {\n        width: '100%',\n        height: '50%',\n        display: 'flex',\n        'flex-direction': 'row',\n        justifyContent: 'space-evenly',\n    },\n    lowerRow: {\n        width: '100%',\n        height: '50%',\n        textAlign: 'left',\n    },\n\n    iconButton: {\n        height: 96,\n        width: 96,\n        padding: 0,\n        margin: 0,\n    },\n    info: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n    },\n    infoBar: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    title: {\n        fontSize: '1.75em',\n    },\n    modal: {\n        height: '35%',\n        width: '35%',\n        margin: 'auto auto',\n    },\n    provider: {\n        '&:hover': {\n            cursor: 'pointer',\n            'text-decoration': 'underline',\n        },\n        fontSize: '1.25em',\n        marginTop: 0,\n        color: '#647AA3',\n    },\n    desc: {\n        marginTop: 5,\n        'word-wrap': 'break-word',\n    },\n    box: {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: 0,\n    },\n    innerBox: {\n        margin: 0,\n        textAlign: 'left',\n        lineHeight: '2',\n        marginLeft: 7,\n    },\n    book: {\n        marginTop: 10,\n    },\n}));\n\nconst ServiceWindow = props => {\n    const getAvgRating = arr => {\n        let sum = 0;\n        let len = arr.length;\n        arr.map(rating => {\n            sum += rating.rating;\n        });\n        return len > 0 ? sum / len : 0;\n    };\n\n    const [cookies] = useCookies();\n\n    const classes = useStyles();\n    const [seen, setSeen] = useState(false);\n\n    const [rating, setRating] = useState(getAvgRating(props.service.ratings));\n\n    const togglePop = () => {\n        setSeen(!seen);\n    };\n\n    const changePage = () => {\n        props.history.push(`/profile/${props.service.provider}`);\n    };\n\n    const addRating = async val => {\n        if (cookies.username) {\n            const res = await axios.put(`/services/${props.service._id}/rate`, {\n                rating: val,\n                username: cookies.username,\n            });\n            setRating(getAvgRating(res.data.result.ratings));\n        }\n    };\n    return (\n        <div className={classes.window}>\n            <div className={classes.upperRow}>\n                <IconButton onClick={changePage} className={classes.iconButton}>\n                    <ProfilePicture\n                        className={classes.userIcon}\n                        username={props.service.provider}\n                    />\n                </IconButton>\n                <div className={classes.infoBar}>\n                    <Typography variant=\"h1\" className={classes.title}>\n                        {props.service.name}\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        onClick={changePage}\n                        className={classes.provider}>\n                        {`@${props.service.provider}`}\n                    </Typography>\n                    <Box ml={2} className={classes.box}>\n                        <StyledRating\n                            name=\"customized-color\"\n                            value={rating}\n                            getLabelText={value =>\n                                `${value} Heart ${value !== 1 ? 's' : ''}`\n                            }\n                            onChange={(e, val) => {\n                                addRating(val);\n                            }}\n                            precision={0.5}\n                            icon={<Favorite fontSize=\"inherit\" />}\n                        />\n                    </Box>\n                </div>\n            </div>\n            <div className={classes.lowerRow} align=\"left\">\n                <div className={classes.info}>\n                    <Typography\n                        variant=\"body2\"\n                        component=\"p\"\n                        className={classes.desc}>\n                        {'Cost: ' + props.service.cost}\n                        <br />\n                        {props.service.description}\n                    </Typography>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={togglePop}\n                        className={classes.book}>\n                        Book\n                    </Button>\n                </div>\n            </div>\n\n            <Modal\n                className={classes.modal}\n                open={seen}\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\">\n                <BookWindow service={props.service} toggle={togglePop} />\n            </Modal>\n        </div>\n    );\n};\n\nexport default ServiceWindow;\n","import axios from 'axios';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, IconButton } from '@material-ui/core';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport ReactDOM from 'react-dom';\nimport {\n    winnipeg,\n    mapLibraries,\n    mapOptions,\n    autocompleteOptions,\n} from './mapUtils';\n\nimport {\n    Autocomplete,\n    GoogleMap,\n    useJsApiLoader,\n} from '@react-google-maps/api';\nimport serviceIconMap from '../ServiceIconMap';\nimport ServiceIcon from '../../images/flag_icon.png';\nimport ServiceWindow from './ServiceWindow';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n    },\n    textField: {\n        backgroundColor: 'black',\n        width: '100%',\n        paddingLeft: '10px',\n    },\n    autocomplete: {\n        width: '80%',\n    },\n    addressContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2%',\n        width: '100%',\n        color: 'black',\n    },\n    mapContainer: {\n        width: '100%',\n        height: '100%',\n    },\n    button: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: '110px',\n        right: '10px',\n        borderRadius: '2px',\n        padding: '8px',\n        '&:hover': { backgroundColor: 'white' },\n    },\n    icon: {\n        '&:hover': { color: 'black' },\n    },\n}));\n\nconst Map = props => {\n    const classes = useStyles();\n    const [center, setCenter] = useState(winnipeg);\n    const [allServices] = useState({});\n    let prevWindow = false;\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        libraries: mapLibraries,\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\n    });\n\n    let marker = useRef();\n    let autocomplete = useRef();\n\n    const onMapLoad = useCallback(map => {\n        getUserLocation();\n        marker.current = new window.google.maps.Marker({\n            map,\n            anchorPoint: new window.google.maps.Point(0, -29),\n        });\n        axios.get(`/services/`).then(response => {\n            let services = response.data.result;\n            services &&\n                services.map(service => {\n                    let div = document.createElement('div');\n                    //build the content string\n                    const contentString = (\n                        <ServiceWindow\n                            history={props.history}\n                            service={service}\n                        />\n                    );\n                    ReactDOM.render(contentString, div);\n\n                    const infowindow = new window.google.maps.InfoWindow({\n                        content: div,\n                    });\n\n                    let markerIcon = service.icon_name\n                        ? {\n                              path: serviceIconMap[service.icon_name].path,\n                              fillColor: '#EC5732',\n                              fillOpacity: 1,\n                              strokeWeight: 0,\n                              scale: 1,\n                          }\n                        : ServiceIcon;\n\n                    let serviceMarker = new window.google.maps.Marker({\n                        map,\n                        position: {\n                            lat: service.location.lat,\n                            lng: service.location.lng,\n                        },\n                        icon: markerIcon,\n                        visible: true,\n                    });\n                    serviceMarker.addListener('click', () => {\n                        if (prevWindow) {\n                            prevWindow.close();\n                        }\n                        prevWindow = infowindow;\n\n                        infowindow.open(map, serviceMarker);\n                    });\n                    allServices[service._id] = serviceMarker;\n                });\n        });\n    }, []);\n\n    const onAutoCompleteLoad = useCallback(autocompleteLoaded => {\n        autocomplete.current = autocompleteLoaded;\n    }, []);\n\n    const getUserLocation = () => {\n        navigator.geolocation?.getCurrentPosition(position => {\n            setCenter({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            });\n        });\n    };\n\n    const onSearchAddressChanged = () => {\n        setCenter(autocomplete.current?.getPlace().geometry?.location);\n    };\n\n    useEffect(() => {\n        if (props.selected_service) {\n            setCenter(props.selected_service.location);\n            new window.google.maps.event.trigger(\n                allServices[props.selected_service._id],\n                'click'\n            );\n        }\n        marker.current?.setPosition(center);\n        marker.current?.setVisible(false);\n    }, [center, props.selected_service]);\n\n    return (\n        <div className={classes.root}>\n            {isLoaded && (\n                <GoogleMap\n                    mapContainerClassName={classes.mapContainer}\n                    center={center}\n                    zoom={12}\n                    mapTypeControl={false}\n                    onLoad={onMapLoad}\n                    options={mapOptions}>\n                    <div className={classes.addressContainer}>\n                        <Autocomplete\n                            options={{\n                                ...autocompleteOptions,\n                                origin: center,\n                            }}\n                            onPlaceChanged={onSearchAddressChanged}\n                            onLoad={onAutoCompleteLoad}\n                            className={classes.autocomplete}>\n                            <TextField\n                                className={classes.textField}\n                                id=\"search-address\"\n                            />\n                        </Autocomplete>\n                    </div>\n                    <IconButton\n                        className={classes.button}\n                        onClick={getUserLocation}>\n                        <MyLocationIcon className={classes.icon} />\n                    </IconButton>\n                </GoogleMap>\n            )}\n        </div>\n    );\n};\n\nexport default Map;\n","export const tagNames = [\n    'Advertising',\n    'Art',\n    'Beauty',\n    'Caretaking',\n    'Cleaning',\n    'Commission',\n    'Construction',\n    'Farming',\n    'Fashion',\n    'Finance',\n    'Food',\n    'Gaming',\n    'Hair',\n    'Interpreting',\n    'Lessons',\n    'Meditation',\n    'Music',\n    'Performance',\n    'Seasonal',\n    'Sports',\n    'Transportation',\n    'Writing',\n    'Yard',\n];\n\nexport default tagNames;\n","import React, { useState } from 'react';\nimport { Card, makeStyles, Typography, Button, Modal } from '@material-ui/core';\nimport { Chip } from '@material-ui/core';\nimport BookWindow from './map/BookWindow';\n\nconst useStyles = makeStyles(() => ({\n    cardView: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 18,\n        color: 'white',\n        width: 'auto',\n    },\n    chip: {\n        margin: 2,\n    },\n    modal: {\n        height: '35%',\n        width: '35%',\n        margin: 'auto auto',\n    },\n    button: {\n        textTransform: 'capitalize',\n    },\n}));\n\nconst formatDuration = duration => {\n    const hours = parseInt(duration.charAt(0) + duration.charAt(1));\n    const minutes = parseInt(duration.charAt(3) + duration.charAt(4));\n    return hours > 0\n        ? hours.toString() + (hours > 1 ? ' hours ' : ' hour ')\n        : '' + minutes > 0\n        ? minutes.toString() + ' minutes ' + minutes\n        : '';\n};\n\nconst ServiceCard = props => {\n    const classes = useStyles();\n    const serviceTags = props.service.tags ? props.service.tags : [];\n    const [expanded, setExpanded] = useState(false);\n    const [booking, setBooking] = useState(false);\n    const toggleBooking = () => {\n        setBooking(!booking);\n    };\n    return (\n        <Card variant=\"outlined\" className={classes.cardView} key={props.index}>\n            <div onClick={() => setExpanded(!expanded)}>\n                <Typography\n                    variant=\"body1\"\n                    className={classes.title}\n                    align=\"left\">\n                    {props.service.name}\n                </Typography>\n            </div>\n\n            <div>\n                {serviceTags?.map((tagData, i) => {\n                    return (\n                        <Chip\n                            key={i}\n                            size=\"small\"\n                            label={tagData}\n                            className={classes.chip}\n                            color={props.selected ? 'secondary' : 'default'}\n                            disabled={!props.selected}\n                        />\n                    );\n                })}\n            </div>\n            {props.expand && expanded ? (\n                <div className={classes.expandedInfo}>\n                    <Typography>{props.service.description}</Typography>\n                    <Typography>Price: {props.service.cost}</Typography>\n                    <Typography>\n                        Duration: {formatDuration(props.service.duration)}\n                    </Typography>\n                    {props.bookable ? (\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={toggleBooking}>\n                            Book\n                        </Button>\n                    ) : null}\n                    <Modal\n                        className={classes.modal}\n                        open={booking}\n                        aria-labelledby=\"spring-modal-title\"\n                        aria-describedby=\"spring-modal-description\">\n                        <BookWindow\n                            service={props.service}\n                            toggle={toggleBooking}\n                        />\n                    </Modal>\n                </div>\n            ) : null}\n        </Card>\n    );\n};\n\nexport default ServiceCard;\n","import { useState } from 'react';\n\nfunction useForm(initialValues = {}) {\n    const [values, setValues] = useState(initialValues);\n\n    const onChange = evt =>\n        setValues({\n            ...values,\n            [evt.target.name]: evt.target.value,\n        });\n\n    return [values, onChange, setValues];\n}\n\nexport default useForm;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    makeStyles,\n    InputBase,\n    Divider,\n    IconButton,\n    List,\n    ListItem,\n    Paper,\n    Chip,\n} from '@material-ui/core';\nimport { FilterList, Search } from '@material-ui/icons/';\nimport tagNames from './FilterList';\nimport ServiceCard from './ServiceCard';\nimport useForm from '../hooks/useForm';\n\n// Styles for the service list (left side) panel.\nconst useStyles = makeStyles(theme => ({\n    rootPanel: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: '384px',\n            width: '384px',\n            height: '100%',\n        },\n        'background-color': theme.background.dark,\n        'overflow-y': 'scroll',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            height: '100%',\n        },\n    },\n    rootList: {\n        padding: '8px',\n        width: 'auto',\n        height: 'auto',\n        'overflow-x': 'hidden',\n    },\n    filters: {\n        'background-color': theme.background.dark,\n        margin: '4%',\n        width: '92%',\n    },\n    searchBar: {\n        margin: '4%',\n        padding: '0',\n        width: '92%',\n        height: '40px',\n        'flex-wrap': 'nowrap',\n        'background-color': theme.background.main,\n        'border-radius': '12px',\n    },\n    searchIcon: {\n        cursor: 'pointer',\n        color: 'white',\n        width: '12.5%',\n        padding: 10,\n    },\n    searchInput: {\n        width: '75%',\n        flex: 1,\n        color: 'white',\n    },\n    tagChip: {\n        margin: '2px',\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n        color: 'white',\n    },\n    bullet: {\n        'padding-left': '5px',\n        'padding-right': '5px',\n        color: '#ec5732',\n    },\n}));\n\n// Styles for the list item contents.\nconst listItemClass = makeStyles(theme => ({\n    root: {\n        '& p': {\n            color: '#545454',\n        },\n        padding: '0',\n        'padding-top': '4px',\n        'padding-bottom': '4px',\n        height: 'auto',\n        width: 'auto',\n    },\n    selected: {\n        '& p': {\n            color: 'white',\n        },\n    },\n    divider: {\n        'border-color': theme.background.main,\n    },\n}));\n\n// Service List component.\nconst ServiceList = props => {\n    const [services, setServices] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n    const [serviceTags, setServiceTags] = useState(false);\n    const [activeFilters] = useState([]);\n    const [change, setChange] = useState(false);\n    const [searchForm, setSearchForm] = useForm({ search: '' });\n\n    const classes = useStyles();\n    const style = listItemClass();\n    const getServices = async () => {\n        try {\n            const response = await axios.post(`/services/filter`, {\n                tags: activeFilters,\n                search: searchForm.search,\n            });\n            setServices(response.data.result);\n        } catch {\n            err => alert(err);\n        }\n    };\n\n    const handleListItemClick = (e, i) => {\n        setSelectedIndex(i);\n    };\n\n    const openFilterList = () => {\n        setServiceTags(!serviceTags);\n    };\n\n    // Show the chips used to set tag filters.\n    const loadChips = () => {\n        return (\n            <Paper className={classes.filters}>\n                {serviceTags\n                    ? tagNames.map((tag, i) => {\n                          return (\n                              <Chip\n                                  size=\"small\"\n                                  key={i}\n                                  label={tag}\n                                  onClick={() => addFilter(tag)}\n                                  className={classes.tagChip}\n                                  color={\n                                      activeFilters.includes(tag)\n                                          ? 'primary'\n                                          : 'default'\n                                  }\n                              />\n                          );\n                      })\n                    : null}\n            </Paper>\n        );\n    };\n\n    // Add a tag to the current list of tag filters.\n    const addFilter = tag => {\n        if (activeFilters.includes(tag)) {\n            const index = activeFilters.indexOf(tag);\n            if (index > -1) activeFilters.splice(index, 1);\n        } else {\n            activeFilters.push(tag);\n        }\n        setChange(!change);\n        setSelectedIndex(-1);\n    };\n\n    const search = () => {\n        console.log(`searching: ${searchForm.search}`);\n    };\n\n    const onServiceFormChange = e => {\n        setSearchForm(e);\n    };\n\n    useEffect(() => {\n        getServices();\n        loadChips();\n    }, [serviceTags, change, searchForm.search]);\n\n    return (\n        <Paper className={classes.rootPanel}>\n            <Paper className={classes.searchBar}>\n                <IconButton\n                    className={classes.searchIcon}\n                    onClick={openFilterList}\n                    aria-label=\"menu\">\n                    <FilterList />\n                </IconButton>\n                <InputBase\n                    className={classes.searchInput}\n                    placeholder=\"Search\"\n                    name=\"search\"\n                    onChange={onServiceFormChange}\n                    value={searchForm.search}\n                    onKeyDown={e =>\n                        e.key === 'Enter' ? search() : console.log(e.key)\n                    }\n                />\n                <IconButton\n                    type=\"submit\"\n                    className={classes.searchIcon}\n                    onClick={search}\n                    aria-label=\"search\">\n                    <Search />\n                </IconButton>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n            </Paper>\n            {loadChips()}\n            <List className={classes.rootList}>\n                {services\n                    ? services.map((service, index) => {\n                          if (selectedIndex == index) {\n                              props.setSelectedService(service);\n                          }\n                          return (\n                              <ListItem\n                                  key={index}\n                                  classes={style}\n                                  onClick={e => handleListItemClick(e, index)}\n                                  selected={selectedIndex == index}\n                                  divider={true}>\n                                  <ServiceCard\n                                      service={service}\n                                      index={index}\n                                      className={classes.serviceCard}\n                                      selected={selectedIndex == index}\n                                      expand={false}\n                                  />\n                              </ListItem>\n                          );\n                      })\n                    : null}\n            </List>\n        </Paper>\n    );\n};\n\nexport default ServiceList;\n","import React, { useEffect, useState } from 'react';\nimport Map from '../components/map/Map';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ServiceList from '../components/ServiceList';\nimport { useCookies } from 'react-cookie';\nimport { useHistory, withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        [theme.breakpoints.up('lg')]: {\n            'flex-direction': 'row',\n        },\n        [theme.breakpoints.down('xs')]: {\n            'flex-direction': 'column-reverse',\n        },\n        width: '100%',\n        height: '91%',\n    },\n}));\n\nconst Home = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const history = useHistory();\n    const [selected_service, setService] = useState();\n    useEffect(() => {\n        if (!cookies.username) history.push('/login');\n    }, []);\n    return (\n        <div className={classes.container}>\n            <ServiceList setSelectedService={service => setService(service)} />\n            <Map selected_service={selected_service} history={history} />\n        </div>\n    );\n};\n\nexport default withRouter(Home);\n","export default __webpack_public_path__ + \"static/media/servus_text.0893beff.svg\";","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport CompanyTitle from '../images/servus_text.svg';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        'background-color': '#FFF2EB',\n    },\n    title: {\n        [theme.breakpoints.down('xs')]: {\n            flexGrow: 1,\n        },\n    },\n    logo: {\n        height: '50px',\n        '&:hover': {\n            cursor: 'pointer',\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: '#272727',\n        fontFamily: 'Times New Roman, serif',\n    },\n    mobile: {\n        marginRight: theme.spacing(2),\n    },\n    headerOptions: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'flex-end',\n    },\n}));\n\nconst Header = props => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const theme = useTheme();\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClick = pageURL => {\n        props.history.push(pageURL);\n    };\n\n    const handleButtonClick = pageURL => {\n        props.history.push(pageURL);\n    };\n\n    const menuItems = [\n        {\n            menuTitle: 'Home',\n            pageURL: '/',\n        },\n        {\n            menuTitle: 'Appointments',\n            pageURL: '/appointment',\n        },\n        {\n            menuTitle: `${props.username}`,\n            pageURL: `/profile/${props.username}`,\n        },\n    ];\n\n    return (\n        <div className={classes.root} position=\"static\">\n            <Toolbar>\n                <div className={classes.title}>\n                    <img\n                        className={classes.logo}\n                        onClick={() => handleButtonClick('/')}\n                        src={CompanyTitle}\n                        height=\"50\"\n                    />\n                </div>\n                {isMobile ? (\n                    <>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            onClick={handleMenu}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            className={classes.mobile}\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={() => setAnchorEl(null)}>\n                            {menuItems.map((menuItem, i) => {\n                                const { menuTitle, pageURL } = menuItem;\n                                return (\n                                    <MenuItem\n                                        key={i}\n                                        onClick={() =>\n                                            handleMenuClick(pageURL)\n                                        }>\n                                        {menuTitle}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Menu>\n                    </>\n                ) : (\n                    <div className={classes.headerOptions}>\n                        <Button\n                            className={classes.menuButton}\n                            onClick={() => handleButtonClick('/appointment')}>\n                            <Typography variant=\"h4\">Appointments</Typography>\n                        </Button>\n                        <Button\n                            className={classes.menuButton}\n                            onClick={\n                                props.username\n                                    ? () =>\n                                          handleButtonClick(\n                                              `/profile/${props.username}`\n                                          )\n                                    : () => handleButtonClick('/login')\n                            }>\n                            <Typography variant=\"h4\">\n                                {props.username ? props.username : 'Login'}\n                            </Typography>\n                        </Button>\n                    </div>\n                )}\n            </Toolbar>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    history: PropTypes.any,\n    push: PropTypes.func,\n};\n\nexport default withRouter(Header);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    ThemeProvider,\n    Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport useForm from '../hooks/useForm';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '2%',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    button: {\n        marginBottom: '3%',\n        textTransform: 'capitalize',\n    },\n    title: {\n        color: 'white',\n    },\n}));\n\nconst Login = props => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [formValid, setFormValid] = useState(false);\n    const [loginForm, onFormChange] = useForm({\n        username: '',\n        password: '',\n    });\n    const validate = () => {\n        let errors = {};\n        if (!loginForm.username) {\n            errors.username = 'username is required';\n        }\n        if (!loginForm.password) {\n            errors.password = 'password is required';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const login = async () => {\n        if (formValid) {\n            axios\n                .post(\n                    `/user/${loginForm.username}/login`,\n                    {\n                        password: loginForm.password,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(res => {\n                    console.log(res.data.result.username);\n                    props.setUsername(res.data.result.username);\n                    history.push('/');\n                })\n                .catch(() => {\n                    alert('User not found.');\n                });\n            return;\n        }\n    };\n\n    useEffect(() => {\n        login();\n    }, [formValid]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Typography variant=\"h2\" className={classes.title}>\n                    Login\n                </Typography>\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-basic\"\n                    label=\"username\"\n                    name=\"username\"\n                    value={loginForm.username}\n                    onChange={onFormChange}\n                    error={errors.username}\n                />\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-password-input\"\n                    label=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"current-password\"\n                    value={loginForm.password}\n                    onChange={onFormChange}\n                    error={errors.password}\n                />\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    onClick={validate}>\n                    Login\n                </Button>\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    onClick={() => history.push('/signup')}>\n                    Sign up\n                </Button>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '10%',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    button: {\n        marginBottom: '3%',\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [formValid, setFormValid] = useState();\n    const [signUpForm, onFormChange] = useForm({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: '',\n    });\n    const validate = () => {\n        let errors = {};\n        if (!signUpForm.firstName) {\n            errors.username = 'first name is required';\n        }\n        if (!signUpForm.lastName) {\n            errors.username = 'last name is required';\n        }\n        if (!signUpForm.username) {\n            errors.username = 'username is required';\n        }\n        if (!signUpForm.password) {\n            errors.password = 'password is required';\n        }\n        if (!signUpForm.confirmPassword) {\n            errors.confirmPassword = 'confirm password is required';\n        } else if (signUpForm.confirmPassword !== signUpForm.password) {\n            errors.confirmPassword = 'passwords must match';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const createAccount = async () => {\n        if (formValid) {\n            axios\n                .post(\n                    `/user/${signUpForm.username}`,\n                    {\n                        password: signUpForm.password,\n                        firstName: signUpForm.firstName,\n                        lastName: signUpForm.lastName,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    axios.post(\n                        `/user/${signUpForm.username}/login`,\n                        {\n                            password: signUpForm.password,\n                        },\n                        {\n                            withCredentials: true,\n                        }\n                    );\n                    history.push('/');\n                })\n                .catch(err => {\n                    if (err.response.status == 422)\n                        alert('username already exists');\n                    else alert(err);\n                    setFormValid(false);\n                });\n            return;\n        }\n    };\n    useEffect(() => {\n        createAccount();\n    }, [formValid]);\n\n    return (\n        <div className={classes.root}>\n            <h2>Create Account</h2>\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"First Name\"\n                name=\"firstName\"\n                value={signUpForm.firstName}\n                onChange={onFormChange}\n                error={errors.firstName}\n                helperText={errors.firstName}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={signUpForm.lastName}\n                onChange={onFormChange}\n                error={errors.lastName}\n                helperText={errors.lastName}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Username\"\n                name=\"username\"\n                value={signUpForm.username}\n                onChange={onFormChange}\n                error={errors.username}\n                helperText={errors.username}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-password-input\"\n                label=\"password\"\n                type=\"Password\"\n                autoComplete=\"current-password\"\n                name=\"password\"\n                value={signUpForm.password}\n                onChange={onFormChange}\n                error={errors.password}\n                helperText={errors.password}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-password-input\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={signUpForm.confirmPassword}\n                onChange={onFormChange}\n                error={errors.confirmPassword}\n                helperText={errors.confirmPassword}\n            />\n            <Button\n                className={classes.button}\n                variant=\"contained\"\n                onClick={validate}>\n                CREATE ACCOUNT\n            </Button>\n        </div>\n    );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TableCell } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Typography from '@material-ui/core/Typography';\nimport { EditingState, ViewState } from '@devexpress/dx-react-scheduler';\nimport seedrandom from 'seedrandom';\nimport classNames from 'clsx';\nimport {\n    Scheduler,\n    MonthView,\n    Appointments,\n    Toolbar,\n    DateNavigator,\n    AppointmentTooltip,\n    AppointmentForm,\n    EditRecurrenceMenu,\n    Resources,\n    DragDropProvider,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst getBorder = () => `2.5px solid #272727`;\n\nconst DayScaleCell = props => (\n    <MonthView.DayScaleCell\n        {...props}\n        style={{ textAlign: 'center', fontWeight: 'bold' }}\n    />\n);\n\nconst styles = theme => ({\n    cell: {\n        color: '#78909C',\n        position: 'relative',\n        userSelect: 'none',\n        verticalAlign: 'top',\n        padding: 0,\n        height: 100,\n        borderBottom: getBorder(),\n        borderLeft: getBorder(),\n        '&:first-child': {\n            borderLeft: 'none',\n        },\n        '&:last-child': {\n            paddingRight: 0,\n        },\n        '&:hover': {\n            backgroundColor: 'black',\n        },\n        '&:focus': {\n            backgroundColor: fade(theme.palette.primary.main, 0.15),\n            outline: 0,\n        },\n    },\n    content: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n    },\n    text: {\n        padding: '0.5em',\n        textAlign: 'center',\n    },\n    opacity: {\n        opacity: '0.5',\n    },\n    appointment: {\n        borderRadius: '10px',\n        '&:hover': {\n            opacity: 0.6,\n        },\n    },\n    apptContent: {\n        '&>div>div': {\n            whiteSpace: 'normal !important',\n            lineHeight: 1.2,\n        },\n    },\n    flexibleSpace: {\n        color: '#78909C',\n        flex: 'none',\n    },\n    flexContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    tooltipContent: {\n        padding: theme.spacing(3, 1),\n        paddingTop: 0,\n        backgroundColor: theme.palette.background.paper,\n        boxSizing: 'border-box',\n        width: '400px',\n    },\n    tooltipText: {\n        ...theme.typography.body2,\n        display: 'inline-block',\n    },\n    title: {\n        ...theme.typography.h6,\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightBold,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    icon: {\n        color: theme.palette.action.active,\n        verticalAlign: 'middle',\n    },\n    circle: {\n        width: theme.spacing(4.5),\n        height: theme.spacing(4.5),\n        verticalAlign: 'super',\n    },\n    textCenter: {\n        textAlign: 'center',\n    },\n    dateAndTitle: {\n        color: '#78909C',\n        lineHeight: 1.1,\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing(2),\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n    },\n});\n\n// #FOLD_BLOCK\nconst CellBase = React.memo(\n    ({\n        classes,\n        startDate,\n        formatDate,\n        otherMonth,\n        // #FOLD_BLOCK\n    }) => {\n        const isFirstMonthDay = startDate.getDate() === 1;\n        const formatOptions = isFirstMonthDay\n            ? { day: 'numeric', month: 'long' }\n            : { day: 'numeric' };\n        return (\n            <TableCell\n                tabIndex={0}\n                className={classNames({\n                    [classes.cell]: true,\n                    [classes.opacity]: otherMonth,\n                })}>\n                <div className={classes.content}></div>\n                <div className={classes.text}>\n                    {formatDate(startDate, formatOptions)}\n                </div>\n            </TableCell>\n        );\n    }\n);\n\nconst TimeTableCell = withStyles(styles, { name: 'Cell' })(CellBase);\n\nconst Appointment = withStyles(styles, {\n    name: 'Appointment',\n})(({ classes, ...restProps }) => (\n    <Appointments.Appointment {...restProps} className={classes.appointment} />\n));\n\nconst AppointmentContent = withStyles(styles, {\n    name: 'AppointmentContent',\n})(({ classes, ...restProps }) => (\n    <Appointments.AppointmentContent\n        {...restProps}\n        className={classes.apptContent}\n    />\n));\n\nconst useStyles = makeStyles(() => ({\n    scheduler: {\n        width: '100%',\n        height: '100%',\n    },\n}));\n\nconst FlexibleSpace = withStyles(styles, { name: 'ToolbarRoot' })(\n    ({ classes, ...restProps }) => (\n        <Toolbar.FlexibleSpace {...restProps} className={classes.flexibleSpace}>\n            <div className={classes.flexContainer}>\n                <Typography variant=\"h5\" style={{ marginLeft: '10px' }}>\n                    My Calendar\n                </Typography>\n            </div>\n        </Toolbar.FlexibleSpace>\n    )\n);\n\nconst getRandomColor = () => {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\nlet setColor = false;\n\nconst Calendar = ({ appointments }) => {\n    const classes = useStyles();\n    const [apptData, setApptData] = useState([]);\n    const [providers, setProviders] = useState([]);\n    const newDate = new Date();\n\n    const commitDeletes = async ({ deleted }) => {\n        const response = await axios.delete(`/appointment/${deleted}`);\n        if (response.status === 200) {\n            setApptData(data => data.filter(({ id }) => id !== deleted));\n        }\n    };\n\n    const passInfo = () => {\n        setProviders([]);\n        setApptData([]);\n        appointments?.forEach(async (apt, i) => {\n            seedrandom(i, { global: true });\n            const newProvider = {\n                text: `${apt.buyer} booked with ${apt.provider}`,\n                provider: apt.provider,\n                id: i,\n                color: getRandomColor(),\n            };\n            setProviders(providers => [...providers, newProvider]);\n            const response = await axios.get(`/services/${apt.service_id}`);\n            const service = response.data.result;\n            const startDate = new Date(apt.booked_time);\n            const endDate = new Date(startDate);\n            endDate.setTime(endDate.getTime() + service.duration * 60 * 1000);\n            const tempObj = {\n                id: apt._id,\n                title: service.name,\n                startDate: startDate,\n                endDate: endDate,\n                ownerId: i,\n            };\n            setApptData(data => [...data, tempObj]);\n        });\n        setColor = false;\n    };\n\n    if (!setColor && appointments.length === providers.length) {\n        providers?.forEach(name => {\n            for (let i = 1; i < providers.length; i++) {\n                if (\n                    name.provider === providers[i].provider &&\n                    providers[i].color !== name.color\n                ) {\n                    providers[i].color = name.color;\n                }\n            }\n        });\n        setColor = true;\n    }\n    const resources = [\n        {\n            fieldName: 'ownerId',\n            title: 'Providers',\n            instances: providers,\n        },\n    ];\n\n    useEffect(() => {\n        passInfo();\n    }, []);\n\n    return (\n        <Scheduler className={classes.scheduler} data={apptData}>\n            <EditingState onCommitChanges={commitDeletes} />\n            <ViewState defaultCurrentDate={newDate} />\n\n            <MonthView\n                timeTableCellComponent={TimeTableCell}\n                dayScaleCellComponent={DayScaleCell}\n            />\n\n            <Appointments\n                appointmentComponent={Appointment}\n                appointmentContentComponent={AppointmentContent}\n            />\n            <Resources data={resources} />\n\n            <Toolbar flexibleSpaceComponent={FlexibleSpace} />\n            <DateNavigator />\n\n            <EditRecurrenceMenu />\n            <AppointmentTooltip showCloseButton showDeleteButton />\n            <AppointmentForm />\n            <DragDropProvider />\n        </Scheduler>\n    );\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Calendar from '../components/Calendar';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '100%',\n        height: '91%',\n    },\n}));\n\nconst Appointment = () => {\n    const [appointments, setAppointments] = useState();\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const history = useHistory();\n    const fetchAppointments = async username => {\n        //this gets appointments where the user is both the buyer and provider\n        const res = await axios.get(`/appointment/${username}`);\n        setAppointments(res.data.result);\n    };\n    //fetch appointments\n    useEffect(() => {\n        if (cookies.username) fetchAppointments(cookies.username);\n        else history.push('/login');\n    }, []);\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.container}>\n                {appointments ? (\n                    <Calendar appointments={appointments}></Calendar>\n                ) : null}\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default Appointment;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    IconButton,\n    ThemeProvider,\n    Typography,\n    Input,\n} from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport ProfilePicture from '../components/ProfilePicture';\nimport { useHistory } from 'react-router';\nimport { ArrowBack } from '@material-ui/icons/';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '2%',\n    },\n    title: {\n        color: 'white',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    passwordTextField: {\n        marginRight: '10px',\n    },\n    button: {\n        textTransform: 'capitalize',\n        marginRight: '10px',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n    },\n    passwordContainer: {\n        display: 'flex',\n        marginBottom: '3%',\n        alignItems: 'center',\n    },\n    accountBtn: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        '&:hover': {},\n    },\n    arrowIcon: {\n        height: '75px',\n        width: '75px',\n    },\n    bio: {\n        height: '100px',\n        width: '50%',\n        marginBottom: '20px',\n    },\n    pic: {\n        color: 'white',\n        width: 96,\n        height: 96,\n    },\n}));\n\nconst Account = props => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [cookies, removeCookie] = useCookies(['username']);\n    const [errors, setErrors] = useState({});\n    const [passwordErrors, setPasswordErrors] = useState({});\n    const [formValid, setFormValid] = useState();\n    const [passwordValid, setPasswordValid] = useState();\n    const [updatingPassword, setUpdatingPassword] = useState(false);\n    const [form, onFormChange, setForm] = useForm({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: '',\n        bio: '',\n    });\n    const getUserInfo = () => {\n        axios\n            .get(`/user/${cookies.username}`)\n            .then(res => {\n                setForm({\n                    username: res.data.result.username,\n                    firstName: res.data.result.firstName,\n                    lastName: res.data.result.lastName,\n                    bio: res.data.result.bio,\n                });\n            })\n            .catch(err => {\n                alert('could not update password' + err);\n            });\n    };\n    const validateInfo = () => {\n        let errors = {};\n        if (!form.firstName) {\n            errors.username = 'first name is required';\n        }\n        if (!form.lastName) {\n            errors.username = 'last name is required';\n        }\n        if (!form.username) {\n            errors.username = 'username is required';\n        }\n        if (form.bio.length > 250) {\n            errors.bio = 'bio must be under 250 characters';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const logout = () => {\n        removeCookie('username');\n        props.setUsername('');\n        history.push('/login');\n    };\n    const validatePassword = () => {\n        let errors = {};\n        if (!form.password) {\n            errors.password = 'password is required';\n        }\n        if (!form.confirmPassword) {\n            errors.confirmPassword = 'last name is required';\n        } else if (form.password !== form.confirmPassword) {\n            errors.confirmPassword = 'passwords must match';\n        }\n        setPasswordErrors(errors);\n        setPasswordValid(\n            Object.getOwnPropertyNames(errors).length == 0 ? true : false\n        );\n    };\n    const updatePassword = async () => {\n        if (passwordValid) {\n            axios\n                .put(`/user/${form.username}`, {\n                    password: form.password,\n                })\n                .then(() => {\n                    alert('Password updated successfully');\n                    setUpdatingPassword(false);\n                })\n                .catch(err => {\n                    alert('could not update password' + err);\n                });\n            setPasswordValid(false);\n        }\n    };\n    const updateInfo = async () => {\n        if (formValid) {\n            axios\n                .put(\n                    `/user/${form.username}`,\n                    {\n                        password: form.password,\n                        firstName: form.firstName,\n                        lastName: form.lastName,\n                        bio: form.bio,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    alert('Info updated successfully');\n                    props.setUsername(form.username);\n                })\n                .catch(err => {\n                    alert(err);\n                    setFormValid(false);\n                });\n            setFormValid(false);\n\n            return;\n        }\n    };\n    const toProfile = () => {\n        history.push(`/profile/${cookies.username}`);\n    };\n    useEffect(() => {\n        updateInfo();\n    }, [formValid]);\n\n    useEffect(() => {\n        updatePassword();\n    }, [passwordValid]);\n\n    useEffect(() => {\n        getUserInfo();\n    }, []);\n    const uploadImage = e => {\n        let imageFormObj = new FormData();\n        imageFormObj.append('imageName', 'multer-image-' + Date.now());\n        imageFormObj.append('imageData', e.target.files[0]);\n        imageFormObj.append('ownerUsername', cookies.username);\n        imageFormObj.append('profilePicture', true);\n\n        // stores a readable instance of the image being uploaded using multer\n        axios\n            .post(`/images/upload`, imageFormObj)\n            .then(() => {})\n            .catch(err => {\n                alert('Error while uploading image' + err);\n            });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Typography variant=\"h2\" className={classes.title}>\n                    Account Details\n                </Typography>\n                <ProfilePicture username={cookies.username} />\n                <Input type=\"file\" onChange={e => uploadImage(e, 'multer')} />\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-basic\"\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    value={form.firstName}\n                    onChange={onFormChange}\n                    error={errors.firstName}\n                    helperText={errors.firstName}\n                />\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-basic\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    value={form.lastName}\n                    onChange={onFormChange}\n                    error={errors.lastName}\n                    helperText={errors.lastName}\n                />\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-basic\"\n                    label=\"Username\"\n                    name=\"username\"\n                    value={form.username}\n                    onChange={onFormChange}\n                    error={errors.username}\n                    helperText={errors.username}\n                />\n                <TextField\n                    className={classes.bio}\n                    id=\"outlined-basic\"\n                    label=\"Bio\"\n                    name=\"bio\"\n                    value={form.bio}\n                    onChange={onFormChange}\n                    multiline\n                    rowsMax={4}\n                    error={errors.bio}\n                    helperText={errors.bio}\n                />\n                {updatingPassword ? (\n                    <div className={classes.passwordContainer}>\n                        <TextField\n                            className={classes.passwordTextField}\n                            id=\"outlined-password-input\"\n                            label=\"password\"\n                            type=\"Password\"\n                            autoComplete=\"current-password\"\n                            name=\"password\"\n                            value={form.password}\n                            onChange={onFormChange}\n                            error={passwordErrors.password}\n                            helperText={passwordErrors.password}\n                        />\n                        <TextField\n                            className={classes.passwordTextField}\n                            id=\"outlined-password-input\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            value={form.confirmPassword}\n                            onChange={onFormChange}\n                            error={passwordErrors.confirmPassword}\n                            helperText={passwordErrors.confirmPassword}\n                        />\n                        <Button\n                            className={classes.button}\n                            onClick={validatePassword}\n                            variant=\"contained\">\n                            Update Password\n                        </Button>\n                    </div>\n                ) : (\n                    <Button\n                        className={classes.button}\n                        onClick={() => setUpdatingPassword(true)}\n                        variant=\"contained\">\n                        Update Password\n                    </Button>\n                )}\n                <div className={classes.buttonContainer}>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        onClick={validateInfo}>\n                        Update Info\n                    </Button>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        onClick={logout}>\n                        Logout\n                    </Button>\n                </div>\n                <IconButton\n                    className={classes.accountBtn}\n                    onClick={() => {\n                        toProfile();\n                    }}>\n                    <ArrowBack className={classes.arrowIcon} />\n                </IconButton>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport {\n    IconButton,\n    FilledInput,\n    GridList,\n    GridListTile,\n} from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '60%',\n        height: '100%',\n        overflow: 'hidden',\n        backgroundColor: theme.background.dark,\n    },\n    inputRoot: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        height: '75px',\n        width: '75px',\n    },\n    btn: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        height: '75px',\n        width: '75px',\n        'pointer-events': 'none',\n        'z-index': 6,\n    },\n    image: {\n        width: '33%',\n        height: 'auto',\n        'object-fit': 'cover',\n    },\n    gridList: {\n        alignContent: 'flex-start',\n        width: '100%',\n        height: '100%',\n    },\n    icon: {\n        width: '50px',\n        height: '50px',\n        color: 'white',\n    },\n}));\n\nconst inputStyles = makeStyles(() => ({\n    root: {\n        position: 'absolute',\n        height: '75px',\n        width: '75px',\n        bottom: 0,\n        right: 0,\n        'z-index': '4',\n    },\n    input: {\n        display: 'inline-block',\n        'box-sizing': 'border-box',\n        'border-radius': '20px',\n        height: '75px',\n        width: '75px',\n        overflow: 'hidden',\n        padding: '120px 0 0 0',\n        'z-index': '4',\n    },\n}));\n\nconst ImageBoard = () => {\n    const [images, setImages] = useState([]);\n    const classes = useStyles();\n    const inputclasses = inputStyles();\n    const [cookies] = useCookies(['username']);\n    const [change, setChange] = useState(false);\n    let { targetUsername } = useParams();\n\n    const getImages = async () => {\n        const response = await axios.get(`/images/${targetUsername}`);\n        let images = response.data.result;\n        images.sort((a, b) => {\n            a.uploadDate <= b.uploadDate ? 1 : -1;\n        });\n        setImages(images);\n    };\n    useEffect(() => {\n        getImages();\n    }, [targetUsername, change]);\n\n    const getImageBoard = () => {\n        console.log(images);\n        return (\n            <GridList cellHeight={200} className={classes.gridList} cols={3}>\n                {images.map((oneImage, index) => {\n                    return (\n                        <GridListTile cols={1} key={index}>\n                            <img\n                                src={`${process.env.REACT_APP_API_HOST}/${oneImage.imageData}`}\n                            />\n                        </GridListTile>\n                    );\n                })}\n            </GridList>\n        );\n    };\n\n    const uploadImage = e => {\n        let imageFormObj = new FormData();\n        imageFormObj.append('imageName', 'multer-image-' + Date.now());\n        imageFormObj.append('imageData', e.target.files[0]);\n        imageFormObj.append('ownerUsername', targetUsername);\n        imageFormObj.append('profilePicture', false);\n\n        // stores a readable instance of the image being uploaded using multer\n        axios\n            .post(`/images/upload`, imageFormObj)\n            .then(() => {})\n            .catch(err => {\n                alert('Error while uploading image' + err);\n            });\n        setChange(!change);\n    };\n    return (\n        <div className={classes.root}>\n            {images ? getImageBoard() : null}\n\n            {cookies.username && cookies.username === targetUsername ? (\n                <div className={classes.inputRoot}>\n                    <IconButton className={classes.btn} variant=\"contained\">\n                        <PublishIcon className={classes.icon} />\n                    </IconButton>\n                    <FilledInput\n                        classes={inputclasses}\n                        type=\"file\"\n                        onChange={e => uploadImage(e, 'multer')}></FilledInput>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default ImageBoard;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { Button, ButtonGroup, TextField, MenuItem } from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { Autocomplete, useJsApiLoader } from '@react-google-maps/api';\nimport { mapLibraries, autocompleteOptions } from './map/mapUtils';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { tagNames } from './FilterList';\nimport { serviceIconMap } from './ServiceIconMap';\nimport {\n    Grid,\n    IconButton,\n    FormControl,\n    ThemeProvider,\n} from '@material-ui/core/';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        width: '80%',\n        marginBottom: '3%',\n    },\n    timeField: {\n        width: '30%',\n    },\n    timeContainer: {\n        width: '80%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    addressSearch: {\n        width: '80%',\n        marginBottom: '3%',\n        color: 'white',\n    },\n    addressField: {\n        width: '100%',\n    },\n    button: {\n        textTransform: 'capitalize',\n        marginRight: '10px',\n        marginTop: '20px',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n        justifyContent: 'center',\n        backgroundColor: theme.background.dark,\n        width: '100%',\n    },\n    servicesContainer: {\n        width: '100%',\n        backgroundColor: theme.background.dark,\n        height: '100%',\n        color: 'white',\n    },\n    serviceForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingTop: '4%',\n        overflow: 'scroll',\n        padding: 10,\n        backgroundColor: theme.background.dark,\n    },\n    formControl: {\n        margin: '10px',\n    },\n    durationSelect: {\n        width: '80%',\n        marginBottom: '20px',\n    },\n    tagSelectLabel: {\n        width: '80%',\n        marginTop: '20px',\n        marginBottom: '4px',\n    },\n    tagSelect: {\n        width: '80%',\n    },\n    tagSelectText: {\n        'align-content': 'left',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    iconGrid: {\n        margin: 0,\n        width: '80%',\n        marginTop: '16px',\n    },\n    daysContainer: {\n        width: '60%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '10px',\n        marginBottom: '20px',\n    },\n    dayButton: {\n        textTransform: 'capitalize',\n    },\n    selectedDayButton: {\n        backgroundColor: 'white',\n        color: 'black',\n        textTransform: 'capitalize',\n    },\n    timesContainer: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    addButton: {\n        marginTop: '24px',\n        textTransform: 'capitalize',\n    },\n}));\n\nconst getStyles = (name, serviceTags, theme) => {\n    return {\n        fontWeight:\n            serviceTags.indexOf(theme) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n};\n\nconst days = [\n    { index: 0, name: 'Sunday' },\n    { index: 1, name: 'Monday' },\n    { index: 2, name: 'Tuesday' },\n    { index: 3, name: 'Wednesday' },\n    { index: 4, name: 'Thursday' },\n    { index: 5, name: 'Friday' },\n    { index: 6, name: 'Saturday' },\n];\n\nconst AddService = ({ addedService }) => {\n    const classes = useStyles();\n    const [cookies] = useCookies(['username']);\n    const [location, setLocation] = useState({});\n    const [serviceTags, setServiceTags] = useState([]);\n    const [serviceIconName, setServiceIconName] = useState('place');\n    const [day, setDay] = useState(0);\n    const [availabilities, setAvailabilities] = useState([\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n    ]);\n    const handleTagChange = event => {\n        setServiceTags(event.target.value);\n    };\n    const handleTagDelete = chipToDelete => () => {\n        console.log(chipToDelete);\n        setServiceTags(chips => chips.filter(chip => chip !== chipToDelete));\n    };\n    const handleIconClick = iconName => () => {\n        setServiceIconName(iconName);\n    };\n    const [serviceForm, onServiceFormChange] = useForm({\n        name: '',\n        description: '',\n        cost: '',\n    });\n    const [serviceDuration, setServiceDuration] = useState('0030');\n    const [serviceDisplayDuration, setServiceDisplayDuration] = useState(\n        '30 minutes'\n    );\n    const [servicesErrors, setServiceErrors] = useState({});\n    const [serviceFormValid, setServiceFormValid] = useState(false);\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        libraries: mapLibraries,\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\n    });\n    let autocomplete = useRef();\n    const validateService = () => {\n        let errors = {};\n        if (!serviceForm.name) {\n            errors.name = 'name is required';\n        }\n        if (!serviceForm.description) {\n            errors.description = 'description is required';\n        }\n        if (!serviceForm.cost) {\n            errors.cost = 'cost is required';\n        }\n        if (serviceDuration.length != 4) {\n            errors.duration = 'duration is required';\n        }\n        if (Object.getOwnPropertyNames(location).length == 0) {\n            errors.location = 'location is required';\n        }\n        setServiceErrors(errors);\n        setServiceFormValid(Object.getOwnPropertyNames(errors).length === 0);\n    };\n    const buildAvailabilities = () => {\n        let requestAvailabilities = [];\n        availabilities.forEach((day, index) => {\n            day = day.filter(\n                availability =>\n                    availability.startTime !== '' && availability.endTime !== ''\n            );\n            day.forEach(availability =>\n                requestAvailabilities.push({\n                    weekday: index,\n                    start_time: availability.startTime,\n                    end_time: availability.endTime,\n                })\n            );\n        });\n        return requestAvailabilities;\n    };\n    const addService = () => {\n        console.log(serviceIconName);\n        if (serviceFormValid) {\n            axios\n                .post(\n                    '/services',\n                    {\n                        username: cookies.username,\n                        name: serviceForm.name,\n                        description: serviceForm.description,\n                        cost: serviceForm.cost,\n                        duration: serviceDuration,\n                        availability: buildAvailabilities(),\n                        location: {\n                            lat: location.lat,\n                            lng: location.lng,\n                            address: location.address,\n                        },\n                        ratings: [],\n                        tags: serviceTags,\n                        icon_name: serviceIconName,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    alert('Service added successfully');\n                    setServiceFormValid(false);\n                    addedService();\n                })\n                .catch(() => {\n                    setServiceFormValid(false);\n                });\n        }\n    };\n    useEffect(() => {\n        addService();\n    }, [serviceFormValid]);\n    const onAutoCompleteLoad = useCallback(autocompleteLoaded => {\n        autocomplete.current = autocompleteLoaded;\n    }, []);\n    const onSearchAddressChanged = () => {\n        setLocation({\n            lat: autocomplete.current?.getPlace().geometry?.location.lat(),\n            lng: autocomplete.current?.getPlace().geometry?.location.lng(),\n            address: `${\n                autocomplete.current?.getPlace().address_components[0]\n                    .short_name\n            } ${\n                autocomplete.current?.getPlace().address_components[1]\n                    .short_name\n            }`,\n        });\n        console.log(location);\n    };\n\n    // Create an IconButton for each supported service icon.\n    const getGridItem = name => {\n        return (\n            <Grid\n                item\n                className={classes.selectableIcon}\n                onClick={handleIconClick(name)}>\n                <IconButton>{serviceIconMap[name].component}</IconButton>\n            </Grid>\n        );\n    };\n\n    // Return a list of icon components.\n    const getGridItems = () => {\n        let names = Object.keys(serviceIconMap);\n        let gridItems = [];\n\n        names.forEach(name => {\n            gridItems.push(getGridItem(name));\n        });\n\n        return gridItems;\n    };\n\n    const changeDay = dayIndex => {\n        setDay(dayIndex);\n    };\n\n    const timePickers = (availability, index) => {\n        return (\n            <div className={classes.timeContainer}>\n                <TextField\n                    id=\"time\"\n                    label=\"Availability Start\"\n                    type=\"time\"\n                    name=\"startTime\"\n                    value={availability.startTime}\n                    className={classes.timeField}\n                    onChange={event => {\n                        let temp = [...availabilities];\n                        temp[day][index] = {\n                            ...temp[day][index],\n                            startTime: event.target.value,\n                        };\n                        setAvailabilities(temp);\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 15 min\n                    }}\n                />\n                <TextField\n                    id=\"time\"\n                    label=\"Availability End\"\n                    type=\"time\"\n                    name=\"endTime\"\n                    value={availability.endTime}\n                    className={classes.timeField}\n                    onChange={event => {\n                        let temp = [...availabilities];\n                        temp[day][index] = {\n                            ...temp[day][index],\n                            endTime: event.target.value,\n                        };\n                        setAvailabilities(temp);\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 15 min\n                    }}\n                />\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        let temp = [...availabilities];\n                        temp[day].splice(index, 1);\n                        setAvailabilities(temp);\n                    }}>\n                    Remove\n                </Button>\n            </div>\n        );\n    };\n\n    const addEmptyAvailability = () => {\n        let temp = [...availabilities];\n        temp[day].push({ startTime: '', endTime: '' });\n        setAvailabilities(temp);\n    };\n\n    let durationOptions = {\n        '0005': '5 minutes',\n        '0010': '10 minutes',\n        '0015': '15 minutes',\n        '0020': '20 minutes',\n        '0025': '25 minutes',\n        '0030': '30 minutes',\n        '0035': '35 minutes',\n        '0040': '40 minutes',\n        '0045': '45 minutes',\n        '0050': '50 minutes',\n        '0100': '1 hour',\n        '0115': '1 hour 15 minutes',\n        '0130': '1 hour 30 minutes',\n        '0145': '1 hour 45 minutes',\n        '0200': '2 hours',\n    };\n    const handleDurationChange = duration => {\n        setServiceDisplayDuration(duration);\n\n        // Get HHMM format from human readable input\n        let formattedTime = Object.keys(durationOptions).find(\n            key => durationOptions[key] === duration\n        );\n        console.log([duration, formattedTime]);\n        setServiceDuration(formattedTime);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.servicesContainer}>\n                <div className={classes.serviceForm}>\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Name\"\n                        name=\"name\"\n                        value={serviceForm.name}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.name}\n                        helperText={servicesErrors.name}\n                    />\n                    {serviceIconMap[serviceIconName]\n                        ? serviceIconMap[serviceIconName].component\n                        : null}\n                    <div className={classes.iconGrid}>\n                        <Grid container spacing={1}>\n                            {getGridItems()}\n                        </Grid>\n                    </div>\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Description\"\n                        name=\"description\"\n                        value={serviceForm.description}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.description}\n                        helperText={servicesErrors.description}\n                    />\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Cost\"\n                        name=\"cost\"\n                        value={serviceForm.cost}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.cost}\n                        helperText={servicesErrors.cost}\n                    />\n                    <FormControl className={classes.durationSelect}>\n                        <InputLabel id=\"durationLabel\">\n                            Service Duration\n                        </InputLabel>\n                        <Select\n                            labelId=\"durationLabel\"\n                            value={serviceDisplayDuration}\n                            onChange={x =>\n                                handleDurationChange(x.target?.value)\n                            }>\n                            {Object.values(durationOptions).map((x, i) => {\n                                return (\n                                    <MenuItem key={i} value={x}>\n                                        {x}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                    {isLoaded && (\n                        <Autocomplete\n                            options={{ ...autocompleteOptions }}\n                            onPlaceChanged={onSearchAddressChanged}\n                            onLoad={onAutoCompleteLoad}\n                            className={classes.addressSearch}>\n                            <TextField\n                                className={classes.addressField}\n                                id=\"search-address\"\n                                placeholder=\"Service Location\"\n                            />\n                        </Autocomplete>\n                    )}\n                    <div className={classes.daysContainer}>\n                        <ButtonGroup\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"contained primary button group\">\n                            {days.map(currDay => (\n                                <Button\n                                    variant=\"contained\"\n                                    className={\n                                        day === currDay.index\n                                            ? classes.selectedDayButton\n                                            : classes.dayButton\n                                    }\n                                    key={currDay.index}\n                                    onClick={() => changeDay(currDay.index)}>\n                                    {currDay.name}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                    </div>\n                    <div className={classes.timesContainer}>\n                        {availabilities[day]?.map((availability, index) => {\n                            return timePickers(availability, index);\n                        })}\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => addEmptyAvailability()}\n                            className={classes.addButton}>\n                            Add availability\n                        </Button>\n                    </div>\n\n                    <InputLabel\n                        className={classes.tagSelectLabel}\n                        id=\"tag-select-label\">\n                        <div className={classes.tagSelectText}>Tags</div>\n                    </InputLabel>\n                    <Select\n                        className={classes.tagSelect}\n                        labelId=\"tag-select-label\"\n                        id=\"tagSelect\"\n                        multiple\n                        value={serviceTags}\n                        onChange={handleTagChange}\n                        input={<Input id=\"select-multiple-tags\" />}\n                        MenuProps={{\n                            getContentAnchorEl: () => null,\n                        }}\n                        renderValue={selected => (\n                            <div className={classes.chips}>\n                                {selected.map(value => (\n                                    <Chip\n                                        key={value}\n                                        label={value}\n                                        className={classes.chip}\n                                        onDelete={handleTagDelete(value)}\n                                        onMouseDown={event => {\n                                            event.stopPropagation();\n                                        }}\n                                    />\n                                ))}\n                            </div>\n                        )}>\n                        {tagNames.map(name => (\n                            <MenuItem\n                                key={name}\n                                value={name}\n                                style={getStyles(name, serviceTags, theme)}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={validateService}>\n                            Add Service\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default AddService;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Typography,\n    List,\n    ListItem,\n    Modal,\n    Paper,\n} from '@material-ui/core';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport AddService from '../components/AddService';\nimport ServiceCard from '../components/ServiceCard';\nimport ProfilePicture from './ProfilePicture';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: '384px',\n            width: '384px',\n            height: '100%',\n        },\n        'background-color': theme.background.dark,\n        'overflow-y': 'scroll',\n        'overflow-x': 'hidden',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            height: '100%',\n        },\n    },\n    userInfo: {\n        height: '100%',\n        width: '20%',\n        background: 'grey',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    userIconContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    userIcon: {\n        height: '75px',\n        width: '75px',\n        margin: '0',\n        padding: '0',\n    },\n    username: {\n        width: '100%',\n        'text-align': 'center',\n        padding: '0',\n        margin: '0',\n    },\n    title: {\n        fontSize: '1.3em',\n    },\n    cardView: {\n        width: '100%',\n    },\n    userDesc: {\n        width: '90%',\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'left',\n        flexDirection: 'column',\n        color: 'black',\n        backgroundColor: '#FFF2EB',\n        marginTop: '20px',\n        marginBottom: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 8,\n        'word-wrap': 'break-word',\n    },\n    rootList: {\n        padding: '8px',\n        width: '100%',\n        height: 'auto',\n        'overflow-x': 'hidden',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    button: {\n        marginTop: 10,\n        textTransform: 'capitalize',\n    },\n    bio: {\n        width: '100%',\n        'text-align': 'center',\n        padding: '0',\n        margin: '0',\n    },\n    modal: {\n        width: '50%',\n        height: '80%',\n        margin: 'auto auto',\n        overflow: 'hidden',\n    },\n    servicesTitle: {\n        marginLeft: '10px',\n        color: 'white',\n    },\n}));\n\nconst listItemClass = makeStyles(theme => ({\n    root: {\n        '& p': {\n            color: '#545454',\n        },\n        padding: '0',\n        'padding-top': '4px',\n        'padding-bottom': '4px',\n        height: 'auto',\n        width: 'auto',\n    },\n    selected: {\n        '& p': {\n            color: 'white',\n        },\n    },\n    divider: {\n        'border-color': theme.background.main,\n    },\n}));\n\nconst ServiceList = props => {\n    const classes = useStyles();\n    const [services, setServiceList] = useState([]);\n    const [addingService, setAddingService] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(1);\n    const [cookies] = useCookies(['username']);\n    const style = listItemClass();\n\n    const getServices = async () => {\n        const response = await axios.get(`/user/${props.username}/services`);\n        setServiceList(response.data.result);\n    };\n\n    useEffect(() => {\n        getServices();\n    }, [props]);\n\n    const addedService = () => {\n        getServices();\n        setAddingService(false);\n    };\n\n    const handleListItemClick = (e, index) => {\n        console.log(e);\n        console.log(index);\n        setSelectedIndex(index);\n    };\n    const handleClose = () => {\n        setAddingService(false);\n    };\n\n    return (\n        <div className={classes.serviceList}>\n            <List className={classes.rootList}>\n                {services\n                    ? services.map((service, index) => {\n                          return (\n                              <ListItem\n                                  key={index}\n                                  classes={style}\n                                  onClick={e => handleListItemClick(e, index)}\n                                  selected={selectedIndex == index}\n                                  divider={true}>\n                                  <ServiceCard\n                                      bookable={\n                                          cookies.username &&\n                                          cookies.username !== props.username\n                                      }\n                                      service={service}\n                                      index={index}\n                                      className={classes.serviceCard}\n                                      selected={selectedIndex == index}\n                                      expand={true}\n                                  />\n                              </ListItem>\n                          );\n                      })\n                    : null}\n            </List>\n            {cookies.username && cookies.username === props.username ? (\n                <div>\n                    <Modal\n                        className={classes.modal}\n                        open={addingService}\n                        onClose={handleClose}>\n                        <AddService addedService={addedService} />\n                    </Modal>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={() => setAddingService(true)}>\n                            Add Service\n                        </Button>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nconst UserInfo = ({ user }) => {\n    const classes = useStyles();\n\n    useEffect(() => {}, [user]);\n    return (\n        <div className={classes.root}>\n            {user ? (\n                <div className={classes.userContainer}>\n                    <Paper elevation={8} className={classes.userDesc}>\n                        <ProfilePicture username={user.username} />\n                        <Typography\n                            className={\n                                classes.username\n                            }>{`@${user.username}`}</Typography>\n\n                        <Typography className={classes.bio} color=\"textPrimary\">\n                            {user.bio}\n                        </Typography>\n                    </Paper>\n                    <div className={classes.servicesTitle}>\n                        <Typography>{`My Services:`}</Typography>\n                    </div>\n                    <ServiceList username={user.username} />\n                </div>\n            ) : (\n                <Typography>User Does Not Exist</Typography>\n            )}\n        </div>\n    );\n};\n\nexport default UserInfo;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { Settings } from '@material-ui/icons/';\nimport ImageBoard from '../components/ImageBoard';\nimport UserInfo from '../components/UserInfo';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: '90%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    accountBtn: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        '&:hover': {},\n    },\n    settingsIcon: {\n        height: '75px',\n        width: '75px',\n        color: 'white',\n    },\n}));\n\nconst Profile = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies(['username']);\n    const history = useHistory();\n    let { targetUsername } = useParams();\n    const [user, setUser] = useState({});\n    const toAccount = () => {\n        history.push('/account');\n    };\n    const displaySettings = () => {\n        return (\n            <IconButton\n                className={classes.accountBtn}\n                onClick={() => {\n                    toAccount();\n                }}>\n                <Settings className={classes.settingsIcon} />\n            </IconButton>\n        );\n    };\n\n    useEffect(() => {\n        const getUserInfo = () => {\n            axios\n                .get(`/user/${targetUsername}`)\n                .then(res => {\n                    setUser(res.data.result);\n                })\n                .catch(() => {\n                    history.push('/');\n                });\n        };\n        if (targetUsername) getUserInfo();\n    }, [targetUsername]);\n\n    return (\n        <div className={classes.root}>\n            <UserInfo user={user} />\n            <ImageBoard username={targetUsername}></ImageBoard>\n\n            {cookies.username && cookies.username === targetUsername\n                ? displaySettings()\n                : null}\n        </div>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport './stylesheets/index.css';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {\n    makeStyles,\n    createMuiTheme,\n    Paper,\n    ThemeProvider,\n} from '@material-ui/core/';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport Appointment from './pages/Appointments';\nimport Account from './pages/Account';\nimport Profile from './pages/Profile';\nimport dotenv from 'dotenv';\nimport { useCookies } from 'react-cookie';\n\ndotenv.config();\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '100%',\n        height: '100%',\n        background: theme.background.dark,\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            display: 'none',\n        },\n        '.MuiInputBase-input': {\n            color: 'white',\n        },\n        '.MuiInputBase-root': {\n            color: 'white',\n        },\n        '.MuiInputLabel-root': {\n            color: 'white',\n        },\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const [username, setUsername] = useState();\n\n    useEffect(() => {\n        if (cookies.username) setUsername(cookies.username);\n    }, []);\n    return (\n        <ThemeProvider theme={theme}>\n            <Paper className={classes.container}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Header username={username} />\n                    <Switch>\n                        <Route\n                            exact\n                            from=\"/\"\n                            render={props => (\n                                <Home {...props} setUsername={setUsername} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/appointment\"\n                            render={props => (\n                                <Appointment\n                                    {...props}\n                                    setUsername={setUsername}\n                                />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={props => (\n                                <Login {...props} setUsername={setUsername} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/signup\"\n                            render={props => <SignUp {...props} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/account\"\n                            render={props => (\n                                <Account {...props} setUsername={setUsername} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={`/profile/:targetUsername`}\n                            render={props => (\n                                <Profile {...props} setUsername={setUsername} />\n                            )}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </Paper>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_HOST;\naxios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}