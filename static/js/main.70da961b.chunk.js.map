{"version":3,"sources":["components/map/mapUtils.js","components/ServiceIconMap.js","images/flag_icon.png","components/ProfilePicture.js","components/map/BookWindow.js","components/map/ServiceWindow.js","components/map/Map.js","components/FilterList.js","components/ServiceCard.js","hooks/useForm.js","components/ServiceList.js","pages/Home.js","images/servus_text.svg","components/Header.js","pages/Login.js","pages/SignUp.js","components/Calendar.js","pages/Appointments.js","pages/Account.js","components/ImageBoard.js","components/AddService.js","components/UserInfo.js","pages/Profile.js","App.js","index.js"],"names":["winnipeg","lat","lng","mapLibraries","autocompleteOptions","bounds","north","south","east","west","componentRestrictions","country","fields","origin","strictBounds","mapOptions","mapTypeControl","disableDefaultUI","zoomControl","styles","mapStyle","serviceIconMap","place","component","Place","path","mdiMapMarker","audiotrack","Audiotrack","mdiMusicNoteEighth","build","Build","mdiWrench","cake","Cake","mdiCake","childfriendly","ChildFriendly","mdiBabyCarriage","commute","Commute","mdiTrainCar","computer","Computer","mdiLaptop","home","Home","mdiHome","hotel","Hotel","mdiBed","localflorist","LocalFlorist","mdiFlower","localpizza","LocalPizza","mdiPizza","mail","Mail","mdiEmail","formatPaint","FormatPaint","mdiFormatPaint","palette","Palette","mdiPalette","restaurant","Restaurant","mdiSilverwareForkKnife","school","School","mdiSchool","shoppingcart","ShoppingCart","mdiCart","videogameasset","VideogameAsset","mdiGamepadSquare","localoffer","LocalOffer","mdiTag","sportshockey","SportsHockey","mdiHockeySticks","terrain","Terrain","mdiTerrain","directionsbike","DirectionsBike","mdiBike","useStyles","makeStyles","pic","width","height","padding","icon","ProfilePicture","props","classes","useState","image","setImage","getImages","a","axios","get","username","response","data","result","useEffect","className","container","src","process","imageData","AccountBox","theme","createMuiTheme","type","primary","main","secondary","default","background","dark","typography","fontFamily","window","margin","display","alignItems","innerwindow","justifyContent","textField","marginLeft","spacing","marginRight","formControl","userIcon","title","marginTop","fontSize","color","divider","close","position","top","right","submit","BookWindow","date","setDate","time","timeState","setTime","timepicker","setTimepicker","valid","setValid","errors","setErrors","useCookies","cookies","durationInHours","service","duration","slice","durationInMinutes","displayTimePicker","removeItemOnce","arr","value","index","indexOf","splice","bookableTimeSlots","addTimeSlices","avail","availability","weekday","day","availabilityStartTime","moment","start_time","availabilityEndTime","end_time","currentAppointmentTime","add","tempTimeSlot","push","format","removeConflictingTimes","_id","appt","res","availableTimes","timeBookedFor","booked_time","timeAppointmentEnds","isSame","i","formattedDate","formattedTime","bookableTimeSlot","bookableTimeSlotEnd","FormControl","data-cy","InputLabel","id","inputLabel","Select","labelId","onChange","x","handleChangeTime","map","MenuItem","bookedTimeSlot","toDate","post","service_id","provider","withCredentials","then","alert","catch","err","toggle","bookAppointment","target","apptDuration","ThemeProvider","Typography","variant","name","noValidate","utils","MomentUtils","DatePicker","label","initialFocusedDate","Date","now","onAccept","autoOk","disablePast","shouldDisableDate","Button","onClick","Object","getOwnPropertyNames","length","StyledRating","withStyles","iconFilled","iconHover","Rating","overflow","maxWidth","upperRow","lowerRow","textAlign","iconButton","info","flexDirection","infoBar","modal","cursor","desc","box","innerBox","lineHeight","book","ServiceWindow","getAvgRating","sum","len","rating","seen","setSeen","ratings","setRating","togglePop","changePage","history","addRating","val","put","IconButton","Box","ml","getLabelText","e","precision","Favorite","align","cost","description","Modal","open","aria-labelledby","aria-describedby","root","backgroundColor","paddingLeft","autocomplete","addressContainer","mapContainer","button","bottom","borderRadius","Map","center","setCenter","allServices","prevWindow","isLoaded","useJsApiLoader","libraries","googleMapsApiKey","marker","useRef","onMapLoad","useCallback","getUserLocation","current","google","maps","Marker","anchorPoint","Point","services","div","document","createElement","contentString","ReactDOM","render","infowindow","InfoWindow","content","markerIcon","icon_name","fillColor","fillOpacity","strokeWeight","scale","ServiceIcon","serviceMarker","location","visible","addListener","onAutoCompleteLoad","autocompleteLoaded","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","selectedService","event","trigger","setPosition","setVisible","mapContainerClassName","zoom","onLoad","options","onPlaceChanged","getPlace","geometry","TextField","tagNames","cardView","chip","textTransform","formatDuration","hours","parseInt","charAt","minutes","toString","ServiceCard","serviceTags","tags","expanded","setExpanded","booking","setBooking","toggleBooking","Card","tagData","Chip","size","selected","disabled","expand","expandedInfo","bookable","useForm","initialValues","values","setValues","evt","rootPanel","breakpoints","up","minWidth","down","rootList","filters","searchBar","searchIcon","searchInput","flex","tagChip","bullet","listItemClass","ServiceList","setServices","selectedIndex","setSelectedIndex","setServiceTags","activeFilters","change","setChange","search","searchForm","setSearchForm","errorText","style","getServices","loadChips","Paper","tag","addFilter","includes","console","log","aria-label","FilterList","InputBase","placeholder","onKeyDown","key","Search","Divider","orientation","List","setSelectedService","ListItem","serviceCard","withRouter","useHistory","setService","flexGrow","logo","menuButton","mobile","headerOptions","anchorEl","setAnchorEl","Boolean","useTheme","isMobile","useMediaQuery","handleButtonClick","pageURL","menuItems","menuTitle","Toolbar","CompanyTitle","edge","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","menuItem","handleMenuClick","inputProps","marginBottom","toast","Login","formValid","setFormValid","setCookie","password","loginForm","onFormChange","setLoginForm","login","setUsername","maxAge","error","helperText","autoComplete","SignUp","confirmPassword","firstName","lastName","signUpForm","createAccount","status","DayScaleCell","fontWeight","cell","userSelect","verticalAlign","borderBottom","borderLeft","paddingRight","fade","outline","text","opacity","appointment","apptContent","whiteSpace","flexibleSpace","flexContainer","tooltipContent","paddingTop","paper","boxSizing","tooltipText","body2","h6","fontWeightBold","textOverflow","action","active","circle","textCenter","dateAndTitle","titleContainer","paddingBottom","CellBase","React","memo","startDate","formatDate","otherMonth","formatOptions","getDate","month","TableCell","tabIndex","classNames","TimeTableCell","Appointment","restProps","AppointmentContent","scheduler","FlexibleSpace","getRandomColor","Math","floor","random","setColor","Calendar","appointments","apptData","setApptData","providers","setProviders","newDate","commitDeletes","deleted","delete","filter","passInfo","forEach","apt","seedrandom","global","newProvider","buyer","endDate","getTime","tempObj","ownerId","resources","fieldName","instances","onCommitChanges","defaultCurrentDate","timeTableCellComponent","dayScaleCellComponent","appointmentComponent","appointmentContentComponent","flexibleSpaceComponent","showCloseButton","showDeleteButton","setAppointments","fetchAppointments","passwordTextField","buttonContainer","passwordContainer","accountBtn","left","arrowIcon","bio","Account","infoError","removeCookie","passwordErrors","setPasswordErrors","passwordValid","setPasswordValid","updatingPassword","setUpdatingPassword","form","setForm","getUserInfo","updatePassword","success","updateInfo","uploadImage","imageFormObj","FormData","append","files","Input","multiline","rowsMax","ArrowBack","inputRoot","btn","gridList","alignContent","inputStyles","input","withWidth","images","setImages","inputclasses","targetUsername","useParams","sort","b","uploadDate","GridList","cellHeight","cols","isWidthUp","oneImage","GridListTile","FilledInput","timeField","timeContainer","addressSearch","addressField","servicesContainer","serviceForm","durationSelect","tagSelectLabel","tagSelect","tagSelectText","chips","flexWrap","iconGrid","daysContainer","dayButton","selectedDayButton","timesContainer","addButton","getStyles","fontWeightRegular","fontWeightMedium","days","AddService","addedService","setLocation","serviceIconName","setServiceIconName","setDay","availabilities","setAvailabilities","onServiceFormChange","serviceDuration","setServiceDuration","serviceDisplayDuration","setServiceDisplayDuration","servicesErrors","setServiceErrors","serviceFormValid","setServiceFormValid","buildAvailabilities","requestAvailabilities","startTime","endTime","address","durationOptions","Grid","names","keys","gridItems","item","selectableIcon","iconName","getGridItem","getGridItems","find","handleDurationChange","address_components","short_name","ButtonGroup","currDay","changeDay","dayIndex","temp","InputLabelProps","shrink","step","timePickers","addEmptyAvailability","multiple","MenuProps","getContentAnchorEl","renderValue","onDelete","chipToDelete","onMouseDown","stopPropagation","userInfo","userIconContainer","userDesc","servicesTitle","setServiceList","addingService","setAddingService","serviceList","handleListItemClick","UserInfo","user","userContainer","elevation","settingsIcon","Profile","setUser","Settings","dotenv","config","App","exact","from","defaults","baseURL","headers","common","rootElement","getElementById","StrictMode","CssBaseline"],"mappings":"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","file":"static/js/main.70da961b.chunk.js","sourcesContent":["import mapStyle from './mapStyle.json';\n\nexport const winnipeg = {\n    lat: 49.8951,\n    lng: -97.1384,\n};\n\nexport const mapLibraries = ['places'];\n\nexport const defaultBounds = {\n    north: winnipeg.lat + 1.0,\n    south: winnipeg.lat - 1.0,\n    east: winnipeg.lng + 1.0,\n    west: winnipeg.lng - 1.0,\n};\n\nexport const autocompleteOptions = {\n    bounds: defaultBounds,\n    componentRestrictions: { country: 'ca' },\n    fields: ['address_components', 'geometry', 'icon', 'name'],\n    origin: winnipeg,\n    strictBounds: true,\n};\n\nexport const mapOptions = {\n    mapTypeControl: false,\n    disableDefaultUI: true,\n    zoomControl: true,\n    styles: mapStyle,\n};\n","import React from 'react';\nimport {\n    mdiMapMarker,\n    mdiMusicNoteEighth,\n    mdiWrench,\n    mdiCake,\n    mdiFlower,\n    mdiPizza,\n    mdiTrainCar,\n    mdiBabyCarriage,\n    mdiLaptop,\n    mdiHome,\n    mdiBed,\n    mdiEmail,\n    mdiPalette,\n    mdiFormatPaint,\n    mdiSilverwareForkKnife,\n    mdiSchool,\n    mdiCart,\n    mdiGamepadSquare,\n    mdiHockeySticks,\n    mdiTag,\n    mdiTerrain,\n    mdiBike,\n} from '@mdi/js';\nimport {\n    Place,\n    Audiotrack,\n    Build,\n    Cake,\n    ChildFriendly,\n    Commute,\n    Computer,\n    Home,\n    Hotel,\n    LocalFlorist,\n    LocalPizza,\n    Mail,\n    FormatPaint,\n    Palette,\n    Restaurant,\n    School,\n    ShoppingCart,\n    VideogameAsset,\n    LocalOffer,\n    Terrain,\n    DirectionsBike,\n    SportsHockey,\n} from '@material-ui/icons';\n\nexport const serviceIconMap = {\n    place: { component: <Place />, path: mdiMapMarker },\n    audiotrack: { component: <Audiotrack />, path: mdiMusicNoteEighth },\n    build: { component: <Build />, path: mdiWrench },\n    cake: { component: <Cake />, path: mdiCake },\n    childfriendly: { component: <ChildFriendly />, path: mdiBabyCarriage },\n    commute: { component: <Commute />, path: mdiTrainCar },\n    computer: { component: <Computer />, path: mdiLaptop },\n    home: { component: <Home />, path: mdiHome },\n    hotel: { component: <Hotel />, path: mdiBed },\n    localflorist: { component: <LocalFlorist />, path: mdiFlower },\n    localpizza: { component: <LocalPizza />, path: mdiPizza },\n    mail: { component: <Mail />, path: mdiEmail },\n    formatPaint: { component: <FormatPaint />, path: mdiFormatPaint },\n    palette: { component: <Palette />, path: mdiPalette },\n    restaurant: { component: <Restaurant />, path: mdiSilverwareForkKnife },\n    school: { component: <School />, path: mdiSchool },\n    shoppingcart: { component: <ShoppingCart />, path: mdiCart },\n    videogameasset: { component: <VideogameAsset />, path: mdiGamepadSquare },\n    localoffer: { component: <LocalOffer />, path: mdiTag },\n    sportshockey: { component: <SportsHockey />, path: mdiHockeySticks },\n    terrain: { component: <Terrain />, path: mdiTerrain },\n    directionsbike: { component: <DirectionsBike />, path: mdiBike },\n};\n\nexport default serviceIconMap;\n","export default __webpack_public_path__ + \"static/media/flag_icon.84b48c77.png\";","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AccountBox } from '@material-ui/icons/';\n\nconst useStyles = makeStyles(() => ({\n    pic: {\n        width: 96,\n        height: 96,\n        padding: 5,\n    },\n    icon: {\n        width: 96,\n        height: 96,\n    },\n}));\n\nconst ProfilePicture = props => {\n    const classes = useStyles();\n    const [image, setImage] = useState(null);\n\n    const getImages = async () => {\n        const response = await axios.get(`/images/${props.username}/profile`);\n        setImage(response.data.result);\n    };\n\n    useEffect(() => {\n        getImages();\n    }, [props.username]);\n\n    return (\n        <div className={classes.container}>\n            {image ? (\n                <img\n                    src={`${process.env.REACT_APP_API_HOST}/${image.imageData}`}\n                    className={classes.pic}\n                />\n            ) : (\n                <AccountBox className={classes.icon} />\n            )}\n        </div>\n    );\n};\n\nexport default ProfilePicture;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    ThemeProvider,\n    Button,\n    Select,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport { useCookies } from 'react-cookie';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    window: {\n        margin: '50',\n        display: 'flex',\n        alignItems: 'center',\n        'flex-direction': 'column',\n        width: '100%',\n        height: '100%',\n        background: theme.background.main,\n    },\n    innerwindow: {\n        display: 'flex',\n        height: '100%',\n        'flex-direction': 'column',\n        justifyContent: 'space-evenly',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        'flex-direction': 'column',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '100%',\n    },\n    formControl: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '100%',\n        height: 40,\n    },\n    userIcon: {\n        height: '96px',\n        width: '96px',\n    },\n    title: {\n        marginTop: '15px',\n        fontSize: '2.5em',\n        color: 'white',\n    },\n    divider: {\n        height: '100%',\n        width: '3',\n        'border-color': theme.background.main,\n    },\n    close: {\n        position: 'absolute',\n        top: 0,\n        right: 10,\n        color: 'white',\n        fontSize: '2em',\n    },\n    submit: {},\n}));\n\nconst BookWindow = props => {\n    // STATES\n    const [date, setDate] = useState();\n    const [timeState, setTime] = useState({ time: '' });\n    const [timepicker, setTimepicker] = useState();\n    const [valid, setValid] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const classes = useStyles();\n    const [cookies] = useCookies();\n\n    let durationInHours = props.service.duration.slice(0, 2);\n    let durationInMinutes = props.service.duration.slice(2);\n\n    const displayTimePicker = async () => {\n        const removeItemOnce = (arr, value) => {\n            let index = arr.indexOf(value);\n            if (index > -1) arr.splice(index, 1);\n            return arr;\n        };\n\n        let bookableTimeSlots = [];\n        // Create an array filled with the possible starting times for intervals that can be booked.\n        const addTimeSlices = () => {\n            for (let avail in props.service.availability) {\n                if (props.service.availability[avail].weekday == date.day()) {\n                    let availabilityStartTime = moment(\n                        props.service.availability[avail].start_time,\n                        'HH:mm'\n                    );\n                    let availabilityEndTime = moment(\n                        props.service.availability[avail].end_time,\n                        'HH:mm'\n                    );\n\n                    // Loop and populate the bookable time slots with 30 minute intervals,\n                    // starting with the availability start time.\n                    let currentAppointmentTime = moment(availabilityStartTime)\n                        .add(durationInHours, 'h')\n                        .add(durationInMinutes, 'm');\n                    let tempTimeSlot = availabilityStartTime;\n\n                    while (currentAppointmentTime <= availabilityEndTime) {\n                        bookableTimeSlots.push(\n                            moment(tempTimeSlot).format('HH:mm')\n                        );\n                        tempTimeSlot.add(30, 'm');\n                        currentAppointmentTime.add(30, 'm');\n                    }\n                }\n            }\n        };\n        // Remove the time slices that won't work.\n        const removeConflictingTimes = async () => {\n            let res = await axios.get(\n                `appointment/service/${props.service._id}`\n            );\n\n            let availableTimes = [];\n            for (let appt in res.data.result) {\n                let timeBookedFor = moment(res.data.result[appt].booked_time);\n                // Duplicate the time and add the length of the appointment to find the end time.\n                let timeAppointmentEnds = moment(timeBookedFor)\n                    .add(durationInHours, 'h')\n                    .add(durationInMinutes, 'm');\n                if (timeBookedFor.isSame(date, 'day')) {\n                    for (let i in bookableTimeSlots) {\n                        let formattedDate = date.format('YYYY-MM-DD');\n                        let formattedTime = moment(\n                            bookableTimeSlots[i],\n                            'HH:mm'\n                        ).format('HH:mm');\n                        let bookableTimeSlot = moment(\n                            `${formattedDate} ${formattedTime}`,\n                            'YYYY-MM-DD HH:mm'\n                        );\n                        let bookableTimeSlotEnd = moment(bookableTimeSlot)\n                            .add(durationInHours, 'h')\n                            .add(durationInMinutes, 'm');\n\n                        // Remove bookable slots where booking would result in schedule overlaps.\n                        if (\n                            (bookableTimeSlot >= timeBookedFor &&\n                                bookableTimeSlot <= timeAppointmentEnds) ||\n                            (bookableTimeSlotEnd >= timeBookedFor &&\n                                bookableTimeSlotEnd <= timeAppointmentEnds)\n                        ) {\n                            availableTimes.push(bookableTimeSlots[i]);\n                        }\n                    }\n                }\n            }\n            for (let i in availableTimes)\n                removeItemOnce(bookableTimeSlots, availableTimes[i]);\n        };\n\n        // Set up the final selectable booking times.\n        addTimeSlices();\n        await removeConflictingTimes();\n\n        setTimepicker(\n            <FormControl className={classes.formControl} data-cy={`appt-time`}>\n                <InputLabel id=\"label\" className={classes.inputLabel}>\n                    Appointment Time\n                </InputLabel>\n                <Select\n                    labelId=\"label\"\n                    value={timeState.time}\n                    onChange={x => handleChangeTime(x)}>\n                    {bookableTimeSlots?.map((x, i) => {\n                        return (\n                            <MenuItem key={i} value={x}>\n                                {x}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n        );\n    };\n\n    // Make the API call to add a new appointment to the database.\n    const bookAppointment = () => {\n        if (valid) {\n            let formattedDate = date.format('YYYY-MM-DD');\n            let formattedTime = moment(timeState.time, 'HH:mm').format(\n                'HH:mm:ss'\n            );\n\n            let bookedTimeSlot = moment(\n                `${formattedDate} ${formattedTime}`,\n                'YYYY-MM-DD HH:mm:ss'\n            ).toDate();\n            axios\n                .post(\n                    `/appointment/${cookies.username}`,\n                    {\n                        service_id: props.service._id,\n                        provider: props.service.provider,\n                        booked_time: bookedTimeSlot,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(res => {\n                    if (!res.data.errors)\n                        alert(\n                            `Successfully booked Service with ${props.service.provider}`\n                        );\n                })\n                .catch(err => {\n                    throw err;\n                });\n            props.toggle();\n            setValid(false);\n        }\n    };\n\n    useEffect(() => {\n        if (cookies.username) bookAppointment();\n        if (date) displayTimePicker();\n    }, [valid, date, timeState]);\n\n    const handleChangeTime = x => {\n        setTime({ time: x.target.value });\n    };\n\n    const shouldDisableDay = date => {\n        for (let avail in props.service.availability) {\n            if (props.service.availability[avail].weekday == date.day())\n                return false;\n        }\n        return true;\n    };\n    const validate = () => {\n        let errors = {};\n        if (!date || !timeState.time) {\n            errors.time = 'Date & Time are required';\n        }\n        setErrors(errors);\n        setValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n\n    const handleClick = () => {\n        props.toggle();\n    };\n\n    let apptDuration = `Appointment Duration:`;\n    if (durationInHours === '00')\n        apptDuration = `${apptDuration} ${durationInMinutes} mins`;\n    else\n        apptDuration = `${apptDuration} ${durationInHours}:${durationInMinutes} hrs`;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.window}>\n                <Typography\n                    variant=\"h1\"\n                    className={classes.title}\n                    data-cy={`book-title`}>\n                    {props.service.name}\n                </Typography>\n                <Typography color=\"textSecondary\">{apptDuration}</Typography>\n                <div className={classes.innerwindow}>\n                    <form className={classes.container} noValidate>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <DatePicker\n                                label={'Appointment Date'}\n                                value={date}\n                                initialFocusedDate={Date.now()}\n                                onAccept={setDate}\n                                onChange={setDate}\n                                name=\"date\"\n                                autoOk={true}\n                                disablePast={true}\n                                errors={errors.time}\n                                shouldDisableDate={shouldDisableDay}\n                                className={classes.textField}\n                                data-cy={`dates`}\n                            />\n                            {timepicker}\n                        </MuiPickersUtilsProvider>\n                    </form>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={validate}\n                        data-cy={`confirm`}>\n                        CONFIRM\n                    </Button>\n                </div>\n                <span className={classes.close} onClick={handleClick}>\n                    &times;{' '}\n                </span>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default BookWindow;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Modal, Box, IconButton } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport { Favorite } from '@material-ui/icons/';\nimport ProfilePicture from '../ProfilePicture';\n\nimport BookWindow from './BookWindow';\nimport { useCookies } from 'react-cookie';\n\nconst StyledRating = withStyles({\n    iconFilled: {\n        color: '#ff6d75',\n    },\n    iconHover: {\n        color: '#EC5732',\n    },\n})(Rating);\n\nconst useStyles = makeStyles(() => ({\n    window: {\n        display: 'flex',\n        'flex-direction': 'column',\n        'align-items': 'center',\n        overflow: 'visible',\n        padding: 10,\n        maxWidth: '200',\n    },\n    upperRow: {\n        width: '100%',\n        height: '50%',\n        display: 'flex',\n        'flex-direction': 'row',\n        justifyContent: 'space-evenly',\n    },\n    lowerRow: {\n        width: '100%',\n        height: '50%',\n        textAlign: 'left',\n    },\n\n    iconButton: {\n        height: 96,\n        width: 96,\n        padding: 0,\n        margin: 0,\n    },\n    info: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n    },\n    infoBar: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    title: {\n        fontSize: '1.75em',\n    },\n    modal: {\n        height: '35%',\n        width: '35%',\n        margin: 'auto auto',\n    },\n    provider: {\n        '&:hover': {\n            cursor: 'pointer',\n            'text-decoration': 'underline',\n        },\n        fontSize: '1.25em',\n        marginTop: 0,\n        color: '#647AA3',\n    },\n    desc: {\n        marginTop: 5,\n        'word-wrap': 'break-word',\n    },\n    box: {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: 0,\n    },\n    innerBox: {\n        margin: 0,\n        textAlign: 'left',\n        lineHeight: '2',\n        marginLeft: 7,\n    },\n    book: {\n        marginTop: 10,\n    },\n}));\n\nconst ServiceWindow = props => {\n    const getAvgRating = arr => {\n        let sum = 0;\n        let len = arr.length;\n        arr.map(rating => {\n            sum += rating.rating;\n        });\n        return len > 0 ? sum / len : 0;\n    };\n\n    const [cookies] = useCookies();\n\n    const classes = useStyles();\n    const [seen, setSeen] = useState(false);\n\n    const [rating, setRating] = useState(getAvgRating(props.service.ratings));\n\n    const togglePop = () => {\n        setSeen(!seen);\n    };\n\n    const changePage = () => {\n        props.history.push(`/profile/${props.service.provider}`);\n    };\n\n    const addRating = async val => {\n        if (cookies.username) {\n            const res = await axios.put(`/services/${props.service._id}/rate`, {\n                rating: val,\n                username: cookies.username,\n            });\n            setRating(getAvgRating(res.data.result.ratings));\n        }\n    };\n    return (\n        <div className={classes.window}>\n            <div className={classes.upperRow}>\n                <IconButton onClick={changePage} className={classes.iconButton}>\n                    <ProfilePicture\n                        className={classes.userIcon}\n                        username={props.service.provider}\n                    />\n                </IconButton>\n                <div className={classes.infoBar}>\n                    <Typography\n                        variant=\"h1\"\n                        className={classes.title}\n                        data-cy={`title`}>\n                        {props.service.name}\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        onClick={changePage}\n                        className={classes.provider}\n                        data-cy={`provider`}>\n                        {`@${props.service.provider}`}\n                    </Typography>\n                    <Box ml={2} className={classes.box}>\n                        <StyledRating\n                            name=\"customized-color\"\n                            value={rating}\n                            getLabelText={value =>\n                                `${value} Heart ${value !== 1 ? 's' : ''}`\n                            }\n                            onChange={(e, val) => {\n                                addRating(val);\n                            }}\n                            precision={0.5}\n                            icon={<Favorite fontSize=\"inherit\" />}\n                        />\n                    </Box>\n                </div>\n            </div>\n            <div className={classes.lowerRow} align=\"left\">\n                <div className={classes.info}>\n                    <Typography\n                        variant=\"body2\"\n                        component=\"p\"\n                        className={classes.desc}>\n                        {'Cost: ' + props.service.cost}\n                        <br />\n                        {props.service.description}\n                    </Typography>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={togglePop}\n                        className={classes.book}\n                        data-cy={`book`}>\n                        Book\n                    </Button>\n                </div>\n            </div>\n\n            <Modal\n                className={classes.modal}\n                open={seen}\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\">\n                <BookWindow service={props.service} toggle={togglePop} />\n            </Modal>\n        </div>\n    );\n};\n\nexport default ServiceWindow;\n","import axios from 'axios';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, IconButton } from '@material-ui/core';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport ReactDOM from 'react-dom';\nimport {\n    winnipeg,\n    mapLibraries,\n    mapOptions,\n    autocompleteOptions,\n} from './mapUtils';\n\nimport {\n    Autocomplete,\n    GoogleMap,\n    useJsApiLoader,\n} from '@react-google-maps/api';\nimport serviceIconMap from '../ServiceIconMap';\nimport ServiceIcon from '../../images/flag_icon.png';\nimport ServiceWindow from './ServiceWindow';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n    },\n    textField: {\n        backgroundColor: 'black',\n        width: '100%',\n        paddingLeft: '10px',\n    },\n    autocomplete: {\n        width: '80%',\n    },\n    addressContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '2%',\n        width: '100%',\n        color: 'black',\n    },\n    mapContainer: {\n        width: '100%',\n        height: '100%',\n    },\n    button: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: '110px',\n        right: '10px',\n        borderRadius: '2px',\n        padding: '8px',\n        '&:hover': { backgroundColor: 'white' },\n    },\n    icon: {\n        '&:hover': { color: 'black' },\n    },\n}));\n\nconst Map = props => {\n    const classes = useStyles();\n    const [center, setCenter] = useState(winnipeg);\n    const [allServices] = useState({});\n    let prevWindow = false;\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        libraries: mapLibraries,\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\n    });\n\n    let marker = useRef();\n    let autocomplete = useRef();\n\n    const onMapLoad = useCallback(map => {\n        getUserLocation();\n        marker.current = new window.google.maps.Marker({\n            map,\n            anchorPoint: new window.google.maps.Point(0, -29),\n        });\n        axios.get(`/services/`).then(response => {\n            let services = response.data.result;\n            services &&\n                services.map(service => {\n                    let div = document.createElement('div');\n                    //build the content string\n                    const contentString = (\n                        <ServiceWindow\n                            history={props.history}\n                            service={service}\n                        />\n                    );\n                    ReactDOM.render(contentString, div);\n\n                    const infowindow = new window.google.maps.InfoWindow({\n                        content: div,\n                    });\n\n                    let markerIcon = service.icon_name\n                        ? {\n                              path: serviceIconMap[service.icon_name].path,\n                              fillColor: '#EC5732',\n                              fillOpacity: 1,\n                              strokeWeight: 0,\n                              scale: 1,\n                          }\n                        : ServiceIcon;\n\n                    let serviceMarker = new window.google.maps.Marker({\n                        map,\n                        position: {\n                            lat: service.location.lat,\n                            lng: service.location.lng,\n                        },\n                        icon: markerIcon,\n                        visible: true,\n                    });\n                    serviceMarker.addListener('click', () => {\n                        if (prevWindow) {\n                            prevWindow.close();\n                        }\n                        prevWindow = infowindow;\n\n                        infowindow.open(map, serviceMarker);\n                    });\n                    allServices[service._id] = serviceMarker;\n                });\n        });\n    }, []);\n\n    const onAutoCompleteLoad = useCallback(autocompleteLoaded => {\n        autocomplete.current = autocompleteLoaded;\n    }, []);\n\n    const getUserLocation = () => {\n        navigator.geolocation?.getCurrentPosition(position => {\n            setCenter({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            });\n        });\n    };\n\n    const onSearchAddressChanged = () => {\n        setCenter(autocomplete.current?.getPlace().geometry?.location);\n    };\n\n    useEffect(() => {\n        if (props.selectedService) {\n            setCenter(props.selectedService.location);\n            new window.google.maps.event.trigger(\n                allServices[props.selectedService._id],\n                'click'\n            );\n        }\n        marker.current?.setPosition(center);\n        marker.current?.setVisible(false);\n    }, [center, props.selectedService]);\n\n    return (\n        <div className={classes.root}>\n            {isLoaded && (\n                <GoogleMap\n                    mapContainerClassName={classes.mapContainer}\n                    center={center}\n                    zoom={12}\n                    mapTypeControl={false}\n                    onLoad={onMapLoad}\n                    options={mapOptions}>\n                    <div className={classes.addressContainer}>\n                        <Autocomplete\n                            options={{\n                                ...autocompleteOptions,\n                                origin: center,\n                            }}\n                            onPlaceChanged={onSearchAddressChanged}\n                            onLoad={onAutoCompleteLoad}\n                            className={classes.autocomplete}>\n                            <TextField\n                                className={classes.textField}\n                                id=\"search-address\"\n                            />\n                        </Autocomplete>\n                    </div>\n                    <IconButton\n                        className={classes.button}\n                        onClick={getUserLocation}>\n                        <MyLocationIcon className={classes.icon} />\n                    </IconButton>\n                </GoogleMap>\n            )}\n        </div>\n    );\n};\n\nexport default Map;\n","export const tagNames = [\n    'Advertising',\n    'Art',\n    'Beauty',\n    'Caretaking',\n    'Cleaning',\n    'Commission',\n    'Construction',\n    'Farming',\n    'Fashion',\n    'Finance',\n    'Food',\n    'Gaming',\n    'Hair',\n    'Interpreting',\n    'Lessons',\n    'Meditation',\n    'Music',\n    'Performance',\n    'Seasonal',\n    'Sports',\n    'Technology',\n    'Transportation',\n    'Writing',\n    'Yard',\n];\n\nexport default tagNames;\n","import React, { useState } from 'react';\nimport { Card, makeStyles, Typography, Button, Modal } from '@material-ui/core';\nimport { Chip } from '@material-ui/core';\nimport BookWindow from './map/BookWindow';\n\nconst useStyles = makeStyles(() => ({\n    cardView: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 18,\n        color: 'white',\n        width: 'auto',\n    },\n    chip: {\n        margin: 2,\n    },\n    modal: {\n        height: '35%',\n        width: '35%',\n        margin: 'auto auto',\n    },\n    button: {\n        textTransform: 'capitalize',\n    },\n}));\n\nconst formatDuration = duration => {\n    const hours = parseInt(duration.charAt(0) + duration.charAt(1));\n    const minutes = parseInt(duration.charAt(3) + duration.charAt(4));\n    return hours > 0\n        ? hours.toString() + (hours > 1 ? ' hours ' : ' hour ')\n        : '' + minutes > 0\n        ? minutes.toString() + ' minutes ' + minutes\n        : '';\n};\n\nconst ServiceCard = props => {\n    const classes = useStyles();\n    const serviceTags = props.service.tags ? props.service.tags : [];\n    const [expanded, setExpanded] = useState(false);\n    const [booking, setBooking] = useState(false);\n    const toggleBooking = () => {\n        setBooking(!booking);\n    };\n    return (\n        <Card variant=\"outlined\" className={classes.cardView} key={props.index}>\n            <div onClick={() => setExpanded(!expanded)}>\n                <Typography\n                    variant=\"body1\"\n                    className={classes.title}\n                    align=\"left\">\n                    {props.service.name}\n                </Typography>\n            </div>\n\n            <div>\n                {serviceTags?.map((tagData, i) => {\n                    return (\n                        <Chip\n                            key={i}\n                            size=\"small\"\n                            label={tagData}\n                            className={classes.chip}\n                            color={props.selected ? 'secondary' : 'default'}\n                            disabled={!props.selected}\n                        />\n                    );\n                })}\n            </div>\n            {props.expand && expanded ? (\n                <div className={classes.expandedInfo}>\n                    <Typography>{props.service.description}</Typography>\n                    <Typography>Price: {props.service.cost}</Typography>\n                    <Typography>\n                        Duration: {formatDuration(props.service.duration)}\n                    </Typography>\n                    {props.bookable ? (\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={toggleBooking}>\n                            Book\n                        </Button>\n                    ) : null}\n                    <Modal\n                        className={classes.modal}\n                        open={booking}\n                        aria-labelledby=\"spring-modal-title\"\n                        aria-describedby=\"spring-modal-description\">\n                        <BookWindow\n                            service={props.service}\n                            toggle={toggleBooking}\n                        />\n                    </Modal>\n                </div>\n            ) : null}\n        </Card>\n    );\n};\n\nexport default ServiceCard;\n","import { useState } from 'react';\n\nfunction useForm(initialValues = {}) {\n    const [values, setValues] = useState(initialValues);\n\n    const onChange = evt =>\n        setValues({\n            ...values,\n            [evt.target.name]: evt.target.value,\n        });\n\n    return [values, onChange, setValues];\n}\n\nexport default useForm;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    makeStyles,\n    InputBase,\n    Divider,\n    IconButton,\n    List,\n    ListItem,\n    Paper,\n    Chip,\n    Typography,\n} from '@material-ui/core';\nimport { FilterList, Search } from '@material-ui/icons/';\nimport tagNames from './FilterList';\nimport ServiceCard from './ServiceCard';\nimport useForm from '../hooks/useForm';\n\n// Styles for the service list (left side) panel.\nconst useStyles = makeStyles(theme => ({\n    rootPanel: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: '384px',\n            width: '384px',\n            height: '100%',\n        },\n        'background-color': theme.background.dark,\n        'overflow-y': 'scroll',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            height: '100%',\n        },\n    },\n    rootList: {\n        padding: '8px',\n        width: 'auto',\n        height: 'auto',\n        'overflow-x': 'hidden',\n    },\n    filters: {\n        'background-color': theme.background.dark,\n        margin: '4%',\n        width: '92%',\n    },\n    searchBar: {\n        margin: '4%',\n        padding: '0',\n        width: '92%',\n        height: '40px',\n        'flex-wrap': 'nowrap',\n        'background-color': theme.background.main,\n        'border-radius': '12px',\n    },\n    searchIcon: {\n        cursor: 'pointer',\n        color: 'white',\n        width: '12.5%',\n        padding: 10,\n    },\n    searchInput: {\n        width: '75%',\n        flex: 1,\n        color: 'white',\n    },\n    tagChip: {\n        margin: '2px',\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n        color: 'white',\n    },\n    bullet: {\n        'padding-left': '5px',\n        'padding-right': '5px',\n        color: '#ec5732',\n    },\n}));\n\n// Styles for the list item contents.\nconst listItemClass = makeStyles(theme => ({\n    root: {\n        '& p': {\n            color: '#545454',\n        },\n        padding: '0',\n        'padding-top': '4px',\n        'padding-bottom': '4px',\n        height: 'auto',\n        width: 'auto',\n    },\n    selected: {\n        '& p': {\n            color: 'white',\n        },\n    },\n    divider: {\n        'border-color': theme.background.main,\n    },\n}));\n\n// Service List component.\nconst ServiceList = props => {\n    const [services, setServices] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n    const [serviceTags, setServiceTags] = useState(false);\n    const [activeFilters] = useState([]);\n    const [change, setChange] = useState(false);\n    const [searchForm, setSearchForm] = useForm({ search: '' });\n    const [errorText, setErrorText] = useState('');\n\n    const classes = useStyles();\n    const style = listItemClass();\n    const getServices = async () => {\n        try {\n            const response = await axios.post(`/services/filter`, {\n                tags: activeFilters,\n                search: searchForm.search,\n            });\n            setServices(response.data.result);\n        } catch {\n            err => setErrorText(err);\n        }\n    };\n\n    const handleListItemClick = (e, i) => {\n        setSelectedIndex(i);\n    };\n\n    const openFilterList = () => {\n        setServiceTags(!serviceTags);\n    };\n\n    // Show the chips used to set tag filters.\n    const loadChips = () => {\n        return (\n            <Paper className={classes.filters}>\n                {serviceTags\n                    ? tagNames.map((tag, i) => {\n                          return (\n                              <Chip\n                                  size=\"small\"\n                                  key={i}\n                                  label={tag}\n                                  onClick={() => addFilter(tag)}\n                                  className={classes.tagChip}\n                                  color={\n                                      activeFilters.includes(tag)\n                                          ? 'primary'\n                                          : 'default'\n                                  }\n                              />\n                          );\n                      })\n                    : null}\n            </Paper>\n        );\n    };\n\n    // Add a tag to the current list of tag filters.\n    const addFilter = tag => {\n        if (activeFilters.includes(tag)) {\n            const index = activeFilters.indexOf(tag);\n            if (index > -1) activeFilters.splice(index, 1);\n        } else {\n            activeFilters.push(tag);\n        }\n        setChange(!change);\n        setSelectedIndex(-1);\n    };\n\n    const search = () => {\n        console.log(`searching: ${searchForm.search}`);\n    };\n\n    const onServiceFormChange = e => {\n        setSearchForm(e);\n    };\n\n    useEffect(() => {\n        getServices();\n        loadChips();\n    }, [serviceTags, change, searchForm.search]);\n\n    return (\n        <Paper className={classes.rootPanel}>\n            <Paper className={classes.searchBar}>\n                <IconButton\n                    className={classes.searchIcon}\n                    onClick={openFilterList}\n                    aria-label=\"menu\">\n                    <FilterList />\n                </IconButton>\n                <InputBase\n                    className={classes.searchInput}\n                    placeholder=\"Search\"\n                    name=\"search\"\n                    onChange={onServiceFormChange}\n                    value={searchForm.search}\n                    onKeyDown={e =>\n                        e.key === 'Enter' ? search() : console.log(e.key)\n                    }\n                />\n                <IconButton\n                    type=\"submit\"\n                    className={classes.searchIcon}\n                    onClick={search}\n                    aria-label=\"search\">\n                    <Search />\n                </IconButton>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n            </Paper>\n            {loadChips()}\n            <List className={classes.rootList}>\n                {services ? (\n                    services.map((service, index) => {\n                        if (selectedIndex == index) {\n                            props.setSelectedService(service);\n                        }\n                        return (\n                            <div data-cy={`service-${index}`} key={index}>\n                                <ListItem\n                                    classes={style}\n                                    onClick={e => handleListItemClick(e, index)}\n                                    selected={selectedIndex == index}\n                                    divider={true}>\n                                    <ServiceCard\n                                        service={service}\n                                        index={index}\n                                        className={classes.serviceCard}\n                                        selected={selectedIndex == index}\n                                        expand={false}\n                                    />\n                                </ListItem>\n                            </div>\n                        );\n                    })\n                ) : (\n                    <Typography>{errorText}</Typography>\n                )}\n            </List>\n        </Paper>\n    );\n};\n\nexport default ServiceList;\n","import React, { useEffect, useState } from 'react';\nimport Map from '../components/map/Map';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ServiceList from '../components/ServiceList';\nimport { useCookies } from 'react-cookie';\nimport { useHistory, withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        [theme.breakpoints.up('lg')]: {\n            'flex-direction': 'row',\n        },\n        [theme.breakpoints.down('xs')]: {\n            'flex-direction': 'column-reverse',\n        },\n        width: '100%',\n        height: '91%',\n    },\n    mapContainer: {\n        width: '100%',\n        height: '100%',\n    },\n}));\n\nconst Home = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const history = useHistory();\n    const [selectedService, setService] = useState();\n    useEffect(() => {\n        if (!cookies.username) history.push('/login');\n    }, []);\n    return (\n        <div className={classes.container}>\n            <ServiceList setSelectedService={service => setService(service)} />\n            <div className={classes.mapContainer} data-cy=\"map\">\n                <Map selectedService={selectedService} history={history} />\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Home);\n","export default __webpack_public_path__ + \"static/media/servus_text.0893beff.svg\";","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport CompanyTitle from '../images/servus_text.svg';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        'background-color': '#FFF2EB',\n    },\n    title: {\n        [theme.breakpoints.down('xs')]: {\n            flexGrow: 1,\n        },\n    },\n    logo: {\n        height: '50px',\n        '&:hover': {\n            cursor: 'pointer',\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: '#272727',\n        fontFamily: 'Times New Roman, serif',\n    },\n    mobile: {\n        marginRight: theme.spacing(2),\n    },\n    headerOptions: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'flex-end',\n    },\n}));\n\nconst Header = props => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const theme = useTheme();\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClick = pageURL => {\n        props.history.push(pageURL);\n    };\n\n    const handleButtonClick = pageURL => {\n        props.history.push(pageURL);\n    };\n\n    const menuItems = [\n        {\n            menuTitle: 'Home',\n            pageURL: '/',\n        },\n        {\n            menuTitle: 'Appointments',\n            pageURL: '/appointment',\n        },\n        {\n            menuTitle: `${props.username}`,\n            pageURL: `/profile/${props.username}`,\n        },\n    ];\n\n    return (\n        <div className={classes.root} position=\"static\">\n            <Toolbar>\n                <div className={classes.title}>\n                    <img\n                        className={classes.logo}\n                        onClick={() => handleButtonClick('/')}\n                        src={CompanyTitle}\n                        height=\"50\"\n                    />\n                </div>\n                {isMobile ? (\n                    <>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            onClick={handleMenu}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            className={classes.mobile}\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={() => setAnchorEl(null)}>\n                            {menuItems.map((menuItem, i) => {\n                                const { menuTitle, pageURL } = menuItem;\n                                return (\n                                    <MenuItem\n                                        key={i}\n                                        onClick={() =>\n                                            handleMenuClick(pageURL)\n                                        }>\n                                        {menuTitle}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Menu>\n                    </>\n                ) : (\n                    <div className={classes.headerOptions}>\n                        <Button\n                            className={classes.menuButton}\n                            onClick={() => handleButtonClick('/appointment')}>\n                            <Typography variant=\"h4\">Appointments</Typography>\n                        </Button>\n                        <Button\n                            className={classes.menuButton}\n                            onClick={\n                                props.username\n                                    ? () =>\n                                          handleButtonClick(\n                                              `/profile/${props.username}`\n                                          )\n                                    : () => handleButtonClick('/login')\n                            }\n                            data-cy=\"headerUsername\">\n                            <Typography\n                                variant=\"h4\"\n                                inputProps={{\n                                    'data-cy': 'headerUsernameText',\n                                }}>\n                                {props.username ? props.username : 'Login'}\n                            </Typography>\n                        </Button>\n                    </div>\n                )}\n            </Toolbar>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    history: PropTypes.any,\n    push: PropTypes.func,\n};\n\nexport default withRouter(Header);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    ThemeProvider,\n    Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport useForm from '../hooks/useForm';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useCookies } from 'react-cookie';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '2%',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    button: {\n        marginBottom: '3%',\n        textTransform: 'capitalize',\n    },\n    title: {\n        color: 'white',\n    },\n    toast: {\n        marginTop: '60px',\n    },\n}));\n\nconst Login = props => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [formValid, setFormValid] = useState(false);\n    const [cookies, setCookie] = useCookies();\n\n    const loginError = () => toast.error('Incorrect username or password');\n    const [loginForm, onFormChange, setLoginForm] = useForm({\n        username: '',\n        password: '',\n    });\n    const validate = () => {\n        let errors = {};\n        if (!loginForm.username) {\n            errors.username = 'username is required';\n        }\n        if (!loginForm.password) {\n            errors.password = 'password is required';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const login = async () => {\n        if (formValid) {\n            axios\n                .post(\n                    `/user/${loginForm.username}/login`,\n                    {\n                        password: loginForm.password,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(res => {\n                    props.setUsername(res.data.result.username);\n                    setCookie('username', res.data.result.username, {\n                        path: '/',\n                        maxAge: 2 * 60 * 60 * 1000,\n                    });\n                    console.log(cookies);\n                    history.push('/');\n                })\n                .catch(() => {\n                    loginError();\n                    setLoginForm({ ...loginForm, password: '' });\n                    setFormValid(false);\n                });\n            return;\n        }\n    };\n\n    useEffect(() => {\n        login();\n    }, [formValid]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <ToastContainer className={classes.toast} />\n                <Typography variant=\"h2\" className={classes.title}>\n                    Login\n                </Typography>\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-basic\"\n                    label=\"username\"\n                    name=\"username\"\n                    value={loginForm.username}\n                    onChange={onFormChange}\n                    error={errors.username}\n                    inputProps={{ 'data-cy': 'username' }}\n                    helperText={errors.username}\n                />\n                <TextField\n                    className={classes.textField}\n                    id=\"outlined-password-input\"\n                    label=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"current-password\"\n                    value={loginForm.password}\n                    onChange={onFormChange}\n                    error={errors.password}\n                    inputProps={{ 'data-cy': 'password' }}\n                    helperText={errors.password}\n                />\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    data-cy=\"login\"\n                    onClick={validate}>\n                    Login\n                </Button>\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    data-cy=\"signup\"\n                    onClick={() => history.push('/signup')}>\n                    Sign up\n                </Button>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '10%',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    button: {\n        marginBottom: '3%',\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [formValid, setFormValid] = useState();\n    const [signUpForm, onFormChange] = useForm({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: '',\n    });\n    const validate = () => {\n        let errors = {};\n        if (!signUpForm.firstName) {\n            errors.username = 'first name is required';\n        }\n        if (!signUpForm.lastName) {\n            errors.username = 'last name is required';\n        }\n        if (!signUpForm.username) {\n            errors.username = 'username is required';\n        }\n        if (!signUpForm.password) {\n            errors.password = 'password is required';\n        }\n        if (!signUpForm.confirmPassword) {\n            errors.confirmPassword = 'confirm password is required';\n        } else if (signUpForm.confirmPassword !== signUpForm.password) {\n            errors.confirmPassword = 'passwords must match';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const createAccount = async () => {\n        if (formValid) {\n            axios\n                .post(\n                    `/user/${signUpForm.username}`,\n                    {\n                        password: signUpForm.password,\n                        firstName: signUpForm.firstName,\n                        lastName: signUpForm.lastName,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    axios.post(\n                        `/user/${signUpForm.username}/login`,\n                        {\n                            password: signUpForm.password,\n                        },\n                        {\n                            withCredentials: true,\n                        }\n                    );\n                    history.push('/');\n                })\n                .catch(err => {\n                    if (err.response.status == 422)\n                        setErrors({\n                            ...errors,\n                            username: 'username already exists',\n                        });\n                    setFormValid(false);\n                });\n            return;\n        }\n    };\n    useEffect(() => {\n        createAccount();\n    }, [formValid]);\n\n    return (\n        <div className={classes.root} data-cy=\"addServiceFormBase\">\n            <h2>Create Account</h2>\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"First Name\"\n                name=\"firstName\"\n                value={signUpForm.firstName}\n                onChange={onFormChange}\n                error={errors.firstName}\n                helperText={errors.firstName}\n                inputProps={{ 'data-cy': 'signupFirstName' }}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={signUpForm.lastName}\n                onChange={onFormChange}\n                error={errors.lastName}\n                helperText={errors.lastName}\n                inputProps={{ 'data-cy': 'signupLastName' }}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Username\"\n                name=\"username\"\n                value={signUpForm.username}\n                onChange={onFormChange}\n                error={errors.username}\n                helperText={errors.username}\n                inputProps={{ 'data-cy': 'signupUsername' }}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-password-input\"\n                label=\"password\"\n                type=\"Password\"\n                autoComplete=\"current-password\"\n                name=\"password\"\n                value={signUpForm.password}\n                onChange={onFormChange}\n                error={errors.password}\n                helperText={errors.password}\n                inputProps={{ 'data-cy': 'signupPassword' }}\n            />\n            <TextField\n                className={classes.textField}\n                id=\"outlined-password-input\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={signUpForm.confirmPassword}\n                onChange={onFormChange}\n                error={errors.confirmPassword}\n                helperText={errors.confirmPassword}\n                inputProps={{ 'data-cy': 'signupConfirmPassword' }}\n            />\n            <Button\n                className={classes.button}\n                variant=\"contained\"\n                onClick={validate}\n                data-cy=\"createAccountButton\">\n                CREATE ACCOUNT\n            </Button>\n        </div>\n    );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TableCell } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Typography from '@material-ui/core/Typography';\nimport { EditingState, ViewState } from '@devexpress/dx-react-scheduler';\nimport seedrandom from 'seedrandom';\nimport classNames from 'clsx';\nimport {\n    Scheduler,\n    MonthView,\n    Appointments,\n    Toolbar,\n    DateNavigator,\n    AppointmentTooltip,\n    AppointmentForm,\n    EditRecurrenceMenu,\n    Resources,\n    DragDropProvider,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst getBorder = () => `2.5px solid #272727`;\n\nconst DayScaleCell = props => (\n    <MonthView.DayScaleCell\n        {...props}\n        style={{ textAlign: 'center', fontWeight: 'bold' }}\n    />\n);\n\nconst styles = theme => ({\n    cell: {\n        color: '#78909C',\n        position: 'relative',\n        userSelect: 'none',\n        verticalAlign: 'top',\n        padding: 0,\n        height: 100,\n        borderBottom: getBorder(),\n        borderLeft: getBorder(),\n        '&:first-child': {\n            borderLeft: 'none',\n        },\n        '&:last-child': {\n            paddingRight: 0,\n        },\n        '&:hover': {\n            backgroundColor: 'black',\n        },\n        '&:focus': {\n            backgroundColor: fade(theme.palette.primary.main, 0.15),\n            outline: 0,\n        },\n    },\n    content: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n    },\n    text: {\n        padding: '0.5em',\n        textAlign: 'center',\n    },\n    opacity: {\n        opacity: '0.5',\n    },\n    appointment: {\n        borderRadius: '10px',\n        '&:hover': {\n            opacity: 0.6,\n        },\n    },\n    apptContent: {\n        '&>div>div': {\n            whiteSpace: 'normal !important',\n            lineHeight: 1.2,\n        },\n    },\n    flexibleSpace: {\n        color: '#78909C',\n        flex: 'none',\n    },\n    flexContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    tooltipContent: {\n        padding: theme.spacing(3, 1),\n        paddingTop: 0,\n        backgroundColor: theme.palette.background.paper,\n        boxSizing: 'border-box',\n        width: '400px',\n    },\n    tooltipText: {\n        ...theme.typography.body2,\n        display: 'inline-block',\n    },\n    title: {\n        ...theme.typography.h6,\n        color: theme.palette.text.secondary,\n        fontWeight: theme.typography.fontWeightBold,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    icon: {\n        color: theme.palette.action.active,\n        verticalAlign: 'middle',\n    },\n    circle: {\n        width: theme.spacing(4.5),\n        height: theme.spacing(4.5),\n        verticalAlign: 'super',\n    },\n    textCenter: {\n        textAlign: 'center',\n    },\n    dateAndTitle: {\n        color: '#78909C',\n        lineHeight: 1.1,\n    },\n    titleContainer: {\n        paddingBottom: theme.spacing(2),\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n    },\n});\n\n// #FOLD_BLOCK\nconst CellBase = React.memo(\n    ({\n        classes,\n        startDate,\n        formatDate,\n        otherMonth,\n        // #FOLD_BLOCK\n    }) => {\n        const isFirstMonthDay = startDate.getDate() === 1;\n        const formatOptions = isFirstMonthDay\n            ? { day: 'numeric', month: 'long' }\n            : { day: 'numeric' };\n        return (\n            <TableCell\n                tabIndex={0}\n                className={classNames({\n                    [classes.cell]: true,\n                    [classes.opacity]: otherMonth,\n                })}>\n                <div className={classes.content}></div>\n                <div className={classes.text}>\n                    {formatDate(startDate, formatOptions)}\n                </div>\n            </TableCell>\n        );\n    }\n);\n\nconst TimeTableCell = withStyles(styles, { name: 'Cell' })(CellBase);\n\nconst Appointment = withStyles(styles, {\n    name: 'Appointment',\n})(({ classes, ...restProps }) => (\n    <Appointments.Appointment\n        {...restProps}\n        data-cy=\"appointmentBlock\"\n        className={classes.appointment}\n    />\n));\n\nconst AppointmentContent = withStyles(styles, {\n    name: 'AppointmentContent',\n})(({ classes, ...restProps }) => (\n    <Appointments.AppointmentContent\n        {...restProps}\n        className={classes.apptContent}\n        data-cy=\"appointmentContent\"\n    />\n));\n\nconst useStyles = makeStyles(() => ({\n    scheduler: {\n        width: '100%',\n        height: '100%',\n    },\n}));\n\nconst FlexibleSpace = withStyles(styles, { name: 'ToolbarRoot' })(\n    ({ classes, ...restProps }) => (\n        <Toolbar.FlexibleSpace {...restProps} className={classes.flexibleSpace}>\n            <div className={classes.flexContainer}>\n                <Typography variant=\"h5\" style={{ marginLeft: '10px' }}>\n                    My Calendar\n                </Typography>\n            </div>\n        </Toolbar.FlexibleSpace>\n    )\n);\n\nconst getRandomColor = () => {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\nlet setColor = false;\n\nconst Calendar = ({ appointments }) => {\n    const classes = useStyles();\n    const [apptData, setApptData] = useState([]);\n    const [providers, setProviders] = useState([]);\n    const newDate = new Date();\n\n    const commitDeletes = async ({ deleted }) => {\n        const response = await axios.delete(`/appointment/${deleted}`);\n        if (response.status === 200) {\n            setApptData(data => data.filter(({ id }) => id !== deleted));\n        }\n    };\n\n    const passInfo = () => {\n        setProviders([]);\n        setApptData([]);\n        appointments?.forEach(async (apt, i) => {\n            seedrandom(i, { global: true });\n            const newProvider = {\n                text: `${apt.buyer} booked with ${apt.provider}`,\n                provider: apt.provider,\n                id: i,\n                color: getRandomColor(),\n            };\n            setProviders(providers => [...providers, newProvider]);\n            const response = await axios.get(`/services/${apt.service_id}`);\n            const service = response.data.result;\n            const startDate = new Date(apt.booked_time);\n            const endDate = new Date(startDate);\n            endDate.setTime(endDate.getTime() + service.duration * 60 * 1000);\n            const tempObj = {\n                id: apt._id,\n                title: service.name,\n                startDate: startDate,\n                endDate: endDate,\n                ownerId: i,\n            };\n            setApptData(data => [...data, tempObj]);\n        });\n        setColor = false;\n    };\n\n    if (!setColor && appointments.length === providers.length) {\n        providers?.forEach(name => {\n            for (let i = 1; i < providers.length; i++) {\n                if (\n                    name.provider === providers[i].provider &&\n                    providers[i].color !== name.color\n                ) {\n                    providers[i].color = name.color;\n                }\n            }\n        });\n        setColor = true;\n    }\n    const resources = [\n        {\n            fieldName: 'ownerId',\n            title: 'Providers',\n            instances: providers,\n        },\n    ];\n\n    useEffect(() => {\n        passInfo();\n    }, []);\n\n    return (\n        <Scheduler className={classes.scheduler} data={apptData}>\n            <EditingState onCommitChanges={commitDeletes} />\n            <ViewState defaultCurrentDate={newDate} />\n\n            <MonthView\n                timeTableCellComponent={TimeTableCell}\n                dayScaleCellComponent={DayScaleCell}\n            />\n\n            <Appointments\n                appointmentComponent={Appointment}\n                appointmentContentComponent={AppointmentContent}\n            />\n            <Resources data={resources} />\n\n            <Toolbar flexibleSpaceComponent={FlexibleSpace} />\n            <DateNavigator />\n\n            <EditRecurrenceMenu />\n            <AppointmentTooltip showCloseButton showDeleteButton />\n            <AppointmentForm />\n            <DragDropProvider />\n        </Scheduler>\n    );\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Calendar from '../components/Calendar';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '100%',\n        height: '91%',\n    },\n}));\n\nconst Appointment = () => {\n    const [appointments, setAppointments] = useState();\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const history = useHistory();\n    const fetchAppointments = async username => {\n        //this gets appointments where the user is both the buyer and provider\n        const res = await axios.get(`/appointment/${username}`);\n        setAppointments(res.data.result);\n    };\n    //fetch appointments\n    useEffect(() => {\n        if (cookies.username) fetchAppointments(cookies.username);\n        else history.push('/login');\n    }, []);\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.container}>\n                {appointments ? (\n                    <Calendar appointments={appointments}></Calendar>\n                ) : null}\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default Appointment;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    IconButton,\n    ThemeProvider,\n    Typography,\n    Input,\n} from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport ProfilePicture from '../components/ProfilePicture';\nimport { useHistory } from 'react-router';\nimport { ArrowBack } from '@material-ui/icons/';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '2%',\n    },\n    title: {\n        color: 'white',\n    },\n    textField: {\n        width: '50%',\n        marginBottom: '3%',\n    },\n    passwordTextField: {\n        marginRight: '10px',\n    },\n    button: {\n        textTransform: 'capitalize',\n        marginRight: '10px',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n    },\n    passwordContainer: {\n        display: 'flex',\n        marginBottom: '3%',\n        alignItems: 'center',\n    },\n    accountBtn: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        '&:hover': {},\n    },\n    arrowIcon: {\n        height: '75px',\n        width: '75px',\n    },\n    bio: {\n        height: '100px',\n        width: '50%',\n        marginBottom: '20px',\n    },\n    pic: {\n        color: 'white',\n        width: 96,\n        height: 96,\n    },\n    toast: {\n        marginTop: '60px',\n    },\n}));\n\nconst Account = props => {\n    const classes = useStyles();\n    const history = useHistory();\n    const passwordError = () => toast.error('Could not update password');\n    const imageError = () => toast.error('Could not upload image');\n    const passwordUpdate = () => toast.success('Password updated successfully');\n    const infoUpdate = () => toast.success('Info updated successfully');\n    const infoError = () => toast.error('Could not update info');\n    const [cookies, removeCookie] = useCookies(['username']);\n    const [errors, setErrors] = useState({});\n    const [passwordErrors, setPasswordErrors] = useState({});\n    const [formValid, setFormValid] = useState();\n    const [passwordValid, setPasswordValid] = useState();\n    const [updatingPassword, setUpdatingPassword] = useState(false);\n    const [form, onFormChange, setForm] = useForm({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: '',\n        bio: '',\n    });\n    const getUserInfo = async () => {\n        try {\n            let res = await axios.get(`/user/${cookies.username}`);\n            setForm({\n                username: res.data.result.username,\n                firstName: res.data.result.firstName,\n                lastName: res.data.result.lastName,\n                bio: res.data.result.bio,\n            });\n        } catch {\n            infoError();\n        }\n    };\n    const validateInfo = () => {\n        let errors = {};\n        if (!form.firstName) {\n            errors.username = 'first name is required';\n        }\n        if (!form.lastName) {\n            errors.username = 'last name is required';\n        }\n        if (!form.username) {\n            errors.username = 'username is required';\n        }\n        if (form.bio.length > 250) {\n            errors.bio = 'bio must be under 250 characters';\n        }\n        setErrors(errors);\n        setFormValid(Object.getOwnPropertyNames(errors).length == 0);\n    };\n    const logout = () => {\n        removeCookie('username');\n        props.setUsername('');\n        history.push('/login');\n    };\n    const validatePassword = () => {\n        let errors = {};\n        if (!form.password) {\n            errors.password = 'password is required';\n        }\n        if (!form.confirmPassword) {\n            errors.confirmPassword = 'last name is required';\n        } else if (form.password !== form.confirmPassword) {\n            errors.confirmPassword = 'passwords must match';\n        }\n        setPasswordErrors(errors);\n        setPasswordValid(\n            Object.getOwnPropertyNames(errors).length == 0 ? true : false\n        );\n    };\n    const updatePassword = async () => {\n        if (passwordValid) {\n            axios\n                .put(`/user/${form.username}`, {\n                    password: form.password,\n                })\n                .then(() => {\n                    passwordUpdate();\n                    setUpdatingPassword(false);\n                })\n                .catch(() => {\n                    passwordError();\n                });\n            setPasswordValid(false);\n            setForm({ ...form, password: '', confirmPassword: '' });\n        }\n    };\n    const updateInfo = async () => {\n        if (formValid) {\n            axios\n                .put(\n                    `/user/${form.username}`,\n                    {\n                        password: form.password,\n                        firstName: form.firstName,\n                        lastName: form.lastName,\n                        bio: form.bio,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    props.setUsername(form.username);\n                    infoUpdate();\n                })\n                .catch(() => {\n                    setFormValid(false);\n                    infoError();\n                });\n            setFormValid(false);\n\n            return;\n        }\n    };\n    const toProfile = () => {\n        history.push(`/profile/${cookies.username}`);\n    };\n    useEffect(() => {\n        updateInfo();\n    }, [formValid]);\n\n    useEffect(() => {\n        updatePassword();\n    }, [passwordValid]);\n\n    useEffect(() => {\n        getUserInfo();\n    }, []);\n    const uploadImage = e => {\n        let imageFormObj = new FormData();\n        imageFormObj.append('imageName', 'multer-image-' + Date.now());\n        imageFormObj.append('imageData', e.target.files[0]);\n        imageFormObj.append('ownerUsername', cookies.username);\n        imageFormObj.append('profilePicture', true);\n\n        // stores a readable instance of the image being uploaded using multer\n        axios\n            .post(`/images/upload`, imageFormObj)\n            .then(() => {})\n            .catch(() => {\n                imageError();\n            });\n    };\n\n    return (\n        <div>\n            <ThemeProvider theme={theme}>\n                <ToastContainer className={classes.toast} />\n                <div className={classes.root}>\n                    <Typography variant=\"h2\" className={classes.title}>\n                        Account Details\n                    </Typography>\n                    <ProfilePicture username={cookies.username} />\n                    <Input\n                        type=\"file\"\n                        onChange={e => uploadImage(e, 'multer')}\n                    />\n                    <TextField\n                        className={classes.textField}\n                        id=\"outlined-basic\"\n                        label=\"First Name\"\n                        name=\"firstName\"\n                        value={form.firstName}\n                        onChange={onFormChange}\n                        error={errors.firstName}\n                        helperText={errors.firstName}\n                    />\n                    <TextField\n                        className={classes.textField}\n                        id=\"outlined-basic\"\n                        label=\"Last Name\"\n                        name=\"lastName\"\n                        value={form.lastName}\n                        onChange={onFormChange}\n                        error={errors.lastName}\n                        helperText={errors.lastName}\n                    />\n                    <TextField\n                        className={classes.textField}\n                        id=\"outlined-basic\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={form.username}\n                        onChange={onFormChange}\n                        error={errors.username}\n                        helperText={errors.username}\n                    />\n                    <TextField\n                        className={classes.bio}\n                        id=\"outlined-basic\"\n                        label=\"Bio\"\n                        name=\"bio\"\n                        value={form.bio}\n                        onChange={onFormChange}\n                        multiline\n                        rowsMax={4}\n                        error={errors.bio}\n                        helperText={errors.bio}\n                    />\n                    {updatingPassword ? (\n                        <div className={classes.passwordContainer}>\n                            <TextField\n                                className={classes.passwordTextField}\n                                id=\"outlined-password-input\"\n                                label=\"password\"\n                                type=\"Password\"\n                                autoComplete=\"current-password\"\n                                name=\"password\"\n                                value={form.password}\n                                onChange={onFormChange}\n                                error={passwordErrors.password}\n                                helperText={passwordErrors.password}\n                            />\n                            <TextField\n                                className={classes.passwordTextField}\n                                id=\"outlined-password-input\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                value={form.confirmPassword}\n                                onChange={onFormChange}\n                                error={passwordErrors.confirmPassword}\n                                helperText={passwordErrors.confirmPassword}\n                            />\n                            <Button\n                                className={classes.button}\n                                onClick={validatePassword}\n                                variant=\"contained\">\n                                Update Password\n                            </Button>\n                        </div>\n                    ) : (\n                        <Button\n                            className={classes.button}\n                            onClick={() => setUpdatingPassword(true)}\n                            variant=\"contained\">\n                            Update Password\n                        </Button>\n                    )}\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={validateInfo}>\n                            Update Info\n                        </Button>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={logout}>\n                            Logout\n                        </Button>\n                    </div>\n                    <IconButton\n                        className={classes.accountBtn}\n                        onClick={() => {\n                            toProfile();\n                        }}>\n                        <ArrowBack className={classes.arrowIcon} />\n                    </IconButton>\n                </div>\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport {\n    IconButton,\n    FilledInput,\n    GridList,\n    GridListTile,\n} from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { makeStyles, withWidth, isWidthUp } from '@material-ui/core';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        backgroundColor: theme.background.dark,\n    },\n    inputRoot: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        height: '75px',\n        width: '75px',\n    },\n    btn: {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        height: '75px',\n        width: '75px',\n        'pointer-events': 'none',\n        'z-index': 6,\n    },\n    image: {\n        width: '33%',\n        height: 'auto',\n        'object-fit': 'cover',\n    },\n    gridList: {\n        alignContent: 'flex-start',\n        width: '100%',\n        height: '100%',\n    },\n    icon: {\n        width: '50px',\n        height: '50px',\n        color: 'white',\n    },\n}));\n\nconst inputStyles = makeStyles(() => ({\n    root: {\n        position: 'absolute',\n        height: '75px',\n        width: '75px',\n        bottom: 0,\n        right: 0,\n        'z-index': '4',\n    },\n    input: {\n        display: 'inline-block',\n        'box-sizing': 'border-box',\n        'border-radius': '20px',\n        height: '75px',\n        width: '75px',\n        overflow: 'hidden',\n        padding: '120px 0 0 0',\n        'z-index': '4',\n    },\n    toast: {\n        marginTop: '60px',\n    },\n}));\n\nconst ImageBoard = props => {\n    const [images, setImages] = useState([]);\n    const classes = useStyles();\n    const inputclasses = inputStyles();\n    const [cookies] = useCookies(['username']);\n    const [change, setChange] = useState(false);\n    const imageError = () => toast.error('Could not upload image');\n    let { targetUsername } = useParams();\n    const getGridListCols = () => {\n        if (isWidthUp('xl', props.width)) {\n            return 4;\n        }\n\n        if (isWidthUp('lg', props.width)) {\n            return 3;\n        }\n\n        return 2;\n    };\n\n    const getImages = async () => {\n        const response = await axios.get(`/images/${targetUsername}`);\n        let images = response.data.result;\n        images.sort((a, b) => {\n            a.uploadDate <= b.uploadDate ? 1 : -1;\n        });\n        setImages(images);\n    };\n    useEffect(() => {\n        getImages();\n    }, [targetUsername, change, props.username]);\n\n    const getImageBoard = () => {\n        console.log(images);\n        return (\n            <GridList\n                cellHeight={200}\n                className={classes.gridList}\n                cols={getGridListCols()}>\n                {images.map((oneImage, index) => {\n                    return (\n                        <GridListTile cols={1} key={index}>\n                            <img\n                                data-cy={`image-${index}`}\n                                src={`${process.env.REACT_APP_API_HOST}/${oneImage.imageData}`}\n                            />\n                        </GridListTile>\n                    );\n                })}\n            </GridList>\n        );\n    };\n\n    const uploadImage = e => {\n        let imageFormObj = new FormData();\n        imageFormObj.append('imageName', 'multer-image-' + Date.now());\n        imageFormObj.append('imageData', e.target.files[0]);\n        imageFormObj.append('ownerUsername', targetUsername);\n        imageFormObj.append('profilePicture', false);\n\n        // stores a readable instance of the image being uploaded using multer\n        axios\n            .post(`/images/upload`, imageFormObj)\n            .then(() => {\n                setChange(!change);\n            })\n            .catch(() => imageError());\n    };\n    return (\n        <div className={classes.root}>\n            <ToastContainer className={classes.toast} />\n            {images ? getImageBoard() : null}\n\n            {cookies.username && cookies.username === targetUsername ? (\n                <div data-cy=\"upload-image\" className={classes.inputRoot}>\n                    <IconButton className={classes.btn} variant=\"contained\">\n                        <PublishIcon className={classes.icon} />\n                    </IconButton>\n                    <FilledInput\n                        classes={inputclasses}\n                        type=\"file\"\n                        onChange={e => uploadImage(e, 'multer')}></FilledInput>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default withWidth()(ImageBoard);\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { Button, ButtonGroup, TextField, MenuItem } from '@material-ui/core';\nimport useForm from '../hooks/useForm';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { Autocomplete, useJsApiLoader } from '@react-google-maps/api';\nimport { mapLibraries, autocompleteOptions } from './map/mapUtils';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { tagNames } from './FilterList';\nimport { serviceIconMap } from './ServiceIconMap';\nimport {\n    Grid,\n    IconButton,\n    FormControl,\n    ThemeProvider,\n} from '@material-ui/core/';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    textField: {\n        width: '80%',\n        marginBottom: '3%',\n    },\n    timeField: {\n        width: '30%',\n    },\n    timeContainer: {\n        width: '80%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    addressSearch: {\n        width: '80%',\n        marginBottom: '3%',\n        color: 'white',\n    },\n    addressField: {\n        width: '100%',\n    },\n    button: {\n        textTransform: 'capitalize',\n        marginRight: '10px',\n        marginTop: '20px',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n        justifyContent: 'center',\n        backgroundColor: theme.background.dark,\n        width: '100%',\n    },\n    servicesContainer: {\n        width: '100%',\n        backgroundColor: theme.background.dark,\n        height: '100%',\n        color: 'white',\n    },\n    serviceForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingTop: '4%',\n        overflow: 'scroll',\n        padding: 10,\n        backgroundColor: theme.background.dark,\n    },\n    formControl: {\n        margin: '10px',\n    },\n    durationSelect: {\n        width: '80%',\n        marginBottom: '20px',\n    },\n    tagSelectLabel: {\n        width: '80%',\n        marginTop: '20px',\n        marginBottom: '4px',\n    },\n    tagSelect: {\n        width: '80%',\n    },\n    tagSelectText: {\n        'align-content': 'left',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    iconGrid: {\n        margin: 0,\n        width: '80%',\n        marginTop: '16px',\n    },\n    daysContainer: {\n        width: '60%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '10px',\n        marginBottom: '20px',\n    },\n    dayButton: {\n        textTransform: 'capitalize',\n    },\n    selectedDayButton: {\n        backgroundColor: 'white',\n        color: 'black',\n        textTransform: 'capitalize',\n    },\n    timesContainer: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    addButton: {\n        marginTop: '24px',\n        textTransform: 'capitalize',\n    },\n}));\n\nconst getStyles = (name, serviceTags, theme) => {\n    return {\n        fontWeight:\n            serviceTags.indexOf(theme) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n};\n\nconst days = [\n    { index: 0, name: 'Sunday' },\n    { index: 1, name: 'Monday' },\n    { index: 2, name: 'Tuesday' },\n    { index: 3, name: 'Wednesday' },\n    { index: 4, name: 'Thursday' },\n    { index: 5, name: 'Friday' },\n    { index: 6, name: 'Saturday' },\n];\n\nconst AddService = ({ addedService }) => {\n    const classes = useStyles();\n    const [cookies] = useCookies(['username']);\n    const [location, setLocation] = useState({});\n    const [serviceTags, setServiceTags] = useState([]);\n    const [serviceIconName, setServiceIconName] = useState('place');\n    const [day, setDay] = useState(0);\n    const [availabilities, setAvailabilities] = useState([\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n    ]);\n    const handleTagChange = event => {\n        setServiceTags(event.target.value);\n    };\n    const handleTagDelete = chipToDelete => () => {\n        console.log(chipToDelete);\n        setServiceTags(chips => chips.filter(chip => chip !== chipToDelete));\n    };\n    const handleIconClick = iconName => () => {\n        setServiceIconName(iconName);\n    };\n    const [serviceForm, onServiceFormChange] = useForm({\n        name: '',\n        description: '',\n        cost: '',\n    });\n    const [serviceDuration, setServiceDuration] = useState('0030');\n    const [serviceDisplayDuration, setServiceDisplayDuration] = useState(\n        '30 minutes'\n    );\n    const [servicesErrors, setServiceErrors] = useState({});\n    const [serviceFormValid, setServiceFormValid] = useState(false);\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        libraries: mapLibraries,\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\n    });\n    let autocomplete = useRef();\n    const validateService = () => {\n        let errors = {};\n        if (!serviceForm.name) {\n            errors.name = 'name is required';\n        }\n        if (!serviceForm.description) {\n            errors.description = 'description is required';\n        }\n        if (!serviceForm.cost) {\n            errors.cost = 'cost is required';\n        }\n        if (serviceDuration.length != 4) {\n            errors.duration = 'duration is required';\n        }\n        if (Object.getOwnPropertyNames(location).length == 0) {\n            errors.location = 'location is required';\n        }\n        setServiceErrors(errors);\n        setServiceFormValid(Object.getOwnPropertyNames(errors).length === 0);\n    };\n    const buildAvailabilities = () => {\n        let requestAvailabilities = [];\n        availabilities.forEach((day, index) => {\n            day = day.filter(\n                availability =>\n                    availability.startTime !== '' && availability.endTime !== ''\n            );\n            day.forEach(availability =>\n                requestAvailabilities.push({\n                    weekday: index,\n                    start_time: availability.startTime,\n                    end_time: availability.endTime,\n                })\n            );\n        });\n        return requestAvailabilities;\n    };\n    const addService = () => {\n        console.log(serviceIconName);\n        if (serviceFormValid) {\n            axios\n                .post(\n                    '/services',\n                    {\n                        username: cookies.username,\n                        name: serviceForm.name,\n                        description: serviceForm.description,\n                        cost: serviceForm.cost,\n                        duration: serviceDuration,\n                        availability: buildAvailabilities(),\n                        location: {\n                            lat: location.lat,\n                            lng: location.lng,\n                            address: location.address,\n                        },\n                        ratings: [],\n                        tags: serviceTags,\n                        icon_name: serviceIconName,\n                    },\n                    {\n                        withCredentials: true,\n                    }\n                )\n                .then(() => {\n                    setServiceFormValid(false);\n                    addedService();\n                })\n                .catch(() => {\n                    setServiceFormValid(false);\n                });\n        }\n    };\n    useEffect(() => {\n        addService();\n    }, [serviceFormValid]);\n    const onAutoCompleteLoad = useCallback(autocompleteLoaded => {\n        autocomplete.current = autocompleteLoaded;\n    }, []);\n    const onSearchAddressChanged = () => {\n        setLocation({\n            lat: autocomplete.current?.getPlace().geometry?.location.lat(),\n            lng: autocomplete.current?.getPlace().geometry?.location.lng(),\n            address: `${\n                autocomplete.current?.getPlace().address_components[0]\n                    .short_name\n            } ${\n                autocomplete.current?.getPlace().address_components[1]\n                    .short_name\n            }`,\n        });\n        console.log(location);\n    };\n\n    // Create an IconButton for each supported service icon.\n    const getGridItem = name => {\n        return (\n            <Grid\n                item\n                className={classes.selectableIcon}\n                onClick={handleIconClick(name)}>\n                <IconButton>{serviceIconMap[name].component}</IconButton>\n            </Grid>\n        );\n    };\n\n    // Return a list of icon components.\n    const getGridItems = () => {\n        let names = Object.keys(serviceIconMap);\n        let gridItems = [];\n\n        names.forEach(name => {\n            gridItems.push(getGridItem(name));\n        });\n\n        return gridItems;\n    };\n\n    const changeDay = dayIndex => {\n        setDay(dayIndex);\n    };\n\n    const timePickers = (availability, index) => {\n        return (\n            <div className={classes.timeContainer}>\n                <TextField\n                    id=\"time\"\n                    label=\"Availability Start\"\n                    type=\"time\"\n                    name=\"startTime\"\n                    value={availability.startTime}\n                    className={classes.timeField}\n                    onChange={event => {\n                        let temp = [...availabilities];\n                        temp[day][index] = {\n                            ...temp[day][index],\n                            startTime: event.target.value,\n                        };\n                        setAvailabilities(temp);\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 15 min\n                        'data-cy': `availabilityStart-${index}`,\n                    }}\n                />\n                <TextField\n                    id=\"time\"\n                    label=\"Availability End\"\n                    type=\"time\"\n                    name=\"endTime\"\n                    value={availability.endTime}\n                    className={classes.timeField}\n                    onChange={event => {\n                        let temp = [...availabilities];\n                        temp[day][index] = {\n                            ...temp[day][index],\n                            endTime: event.target.value,\n                        };\n                        setAvailabilities(temp);\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputProps={{\n                        step: 300, // 15 min\n                        'data-cy': `availabilityEnd-${index}`,\n                    }}\n                />\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        let temp = [...availabilities];\n                        temp[day].splice(index, 1);\n                        setAvailabilities(temp);\n                    }}>\n                    Remove\n                </Button>\n            </div>\n        );\n    };\n\n    const addEmptyAvailability = () => {\n        let temp = [...availabilities];\n        temp[day].push({ startTime: '', endTime: '' });\n        setAvailabilities(temp);\n    };\n\n    let durationOptions = {\n        '0005': '5 minutes',\n        '0010': '10 minutes',\n        '0015': '15 minutes',\n        '0020': '20 minutes',\n        '0025': '25 minutes',\n        '0030': '30 minutes',\n        '0035': '35 minutes',\n        '0040': '40 minutes',\n        '0045': '45 minutes',\n        '0050': '50 minutes',\n        '0100': '1 hour',\n        '0115': '1 hour 15 minutes',\n        '0130': '1 hour 30 minutes',\n        '0145': '1 hour 45 minutes',\n        '0200': '2 hours',\n    };\n    const handleDurationChange = duration => {\n        setServiceDisplayDuration(duration);\n\n        // Get HHMM format from human readable input\n        let formattedTime = Object.keys(durationOptions).find(\n            key => durationOptions[key] === duration\n        );\n        console.log([duration, formattedTime]);\n        setServiceDuration(formattedTime);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.servicesContainer}>\n                <div className={classes.serviceForm}>\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Name\"\n                        name=\"name\"\n                        value={serviceForm.name}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.name}\n                        helperText={servicesErrors.name}\n                        inputProps={{ 'data-cy': 'serviceName' }}\n                    />\n                    {serviceIconMap[serviceIconName]\n                        ? serviceIconMap[serviceIconName].component\n                        : null}\n                    <div className={classes.iconGrid}>\n                        <Grid container spacing={1}>\n                            {getGridItems()}\n                        </Grid>\n                    </div>\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Description\"\n                        name=\"description\"\n                        value={serviceForm.description}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.description}\n                        helperText={servicesErrors.description}\n                        inputProps={{ 'data-cy': 'serviceDescription' }}\n                    />\n                    <TextField\n                        className={classes.textField}\n                        label=\"Service Cost\"\n                        name=\"cost\"\n                        value={serviceForm.cost}\n                        onChange={onServiceFormChange}\n                        error={servicesErrors.cost}\n                        helperText={servicesErrors.cost}\n                        inputProps={{ 'data-cy': 'serviceCost' }}\n                    />\n                    <FormControl className={classes.durationSelect}>\n                        <InputLabel id=\"durationLabel\">\n                            Service Duration\n                        </InputLabel>\n                        <Select\n                            labelId=\"durationLabel\"\n                            value={serviceDisplayDuration}\n                            onChange={x =>\n                                handleDurationChange(x.target?.value)\n                            }\n                            data-cy=\"serviceDuration\">\n                            {Object.values(durationOptions).map((x, i) => {\n                                return (\n                                    <MenuItem key={i} value={x}>\n                                        {x}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                    {isLoaded && (\n                        <Autocomplete\n                            options={{ ...autocompleteOptions }}\n                            onPlaceChanged={onSearchAddressChanged}\n                            onLoad={onAutoCompleteLoad}\n                            className={classes.addressSearch}>\n                            <TextField\n                                className={classes.addressField}\n                                id=\"search-address\"\n                                inputProps={{ 'data-cy': 'searchAddress' }}\n                                placeholder=\"Service Location\"\n                            />\n                        </Autocomplete>\n                    )}\n                    <div className={classes.daysContainer}>\n                        <ButtonGroup\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"contained primary button group\">\n                            {days.map(currDay => (\n                                <Button\n                                    variant=\"contained\"\n                                    className={\n                                        day === currDay.index\n                                            ? classes.selectedDayButton\n                                            : classes.dayButton\n                                    }\n                                    key={currDay.index}\n                                    onClick={() => changeDay(currDay.index)}\n                                    data-cy={'weekdayButton-' + currDay.index}>\n                                    {currDay.name}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                    </div>\n                    <div className={classes.timesContainer}>\n                        {availabilities[day]?.map((availability, index) => {\n                            return timePickers(availability, index);\n                        })}\n                        <Button\n                            variant=\"contained\"\n                            onClick={() => addEmptyAvailability()}\n                            className={classes.addButton}\n                            data-cy=\"addAvailabilityButton\">\n                            Add availability\n                        </Button>\n                    </div>\n\n                    <InputLabel\n                        className={classes.tagSelectLabel}\n                        id=\"tag-select-label\">\n                        <div className={classes.tagSelectText}>Tags</div>\n                    </InputLabel>\n                    <Select\n                        className={classes.tagSelect}\n                        labelId=\"tag-select-label\"\n                        id=\"tagSelect\"\n                        multiple\n                        value={serviceTags}\n                        onChange={handleTagChange}\n                        input={<Input id=\"select-multiple-tags\" />}\n                        MenuProps={{\n                            getContentAnchorEl: () => null,\n                        }}\n                        renderValue={selected => (\n                            <div className={classes.chips}>\n                                {selected.map(value => (\n                                    <Chip\n                                        key={value}\n                                        label={value}\n                                        className={classes.chip}\n                                        onDelete={handleTagDelete(value)}\n                                        onMouseDown={event => {\n                                            event.stopPropagation();\n                                        }}\n                                    />\n                                ))}\n                            </div>\n                        )}\n                        data-cy=\"serviceTags\">\n                        {tagNames.map(name => (\n                            <MenuItem\n                                key={name}\n                                value={name}\n                                style={getStyles(name, serviceTags, theme)}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={validateService}\n                            data-cy=\"submitAddService\">\n                            Add Service\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n    );\n};\n\nexport default AddService;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Typography,\n    List,\n    ListItem,\n    Modal,\n    Paper,\n} from '@material-ui/core';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport AddService from '../components/AddService';\nimport ServiceCard from '../components/ServiceCard';\nimport ProfilePicture from './ProfilePicture';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: '384px',\n            width: '384px',\n            height: '100%',\n        },\n        'background-color': theme.background.dark,\n        'overflow-y': 'scroll',\n        'overflow-x': 'hidden',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            height: '50%',\n        },\n    },\n    userInfo: {\n        height: '100%',\n        width: '20%',\n        background: 'grey',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    userIconContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    userIcon: {\n        height: '75px',\n        width: '75px',\n        margin: '0',\n        padding: '0',\n    },\n    username: {\n        width: '100%',\n        'text-align': 'center',\n        padding: '0',\n        margin: '0',\n    },\n    title: {\n        fontSize: '1.3em',\n    },\n    cardView: {\n        width: '100%',\n    },\n    userDesc: {\n        width: '90%',\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'left',\n        flexDirection: 'column',\n        color: 'black',\n        backgroundColor: '#FFF2EB',\n        marginTop: '20px',\n        marginBottom: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 8,\n        'word-wrap': 'break-word',\n    },\n    rootList: {\n        padding: '8px',\n        width: '100%',\n        height: 'auto',\n        'overflow-x': 'hidden',\n    },\n    buttonContainer: {\n        display: 'flex',\n        marginTop: '10px',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    button: {\n        marginTop: 10,\n        textTransform: 'capitalize',\n    },\n    bio: {\n        width: '100%',\n        'text-align': 'center',\n        padding: '0',\n        margin: '0',\n    },\n    modal: {\n        width: '50%',\n        height: '80%',\n        margin: 'auto auto',\n        overflow: 'hidden',\n    },\n    servicesTitle: {\n        marginLeft: '10px',\n        color: 'white',\n    },\n    toast: {\n        marginTop: '60px',\n    },\n}));\n\nconst listItemClass = makeStyles(theme => ({\n    root: {\n        '& p': {\n            color: '#545454',\n        },\n        padding: '0',\n        'padding-top': '4px',\n        'padding-bottom': '4px',\n        height: 'auto',\n        width: 'auto',\n    },\n    selected: {\n        '& p': {\n            color: 'white',\n        },\n    },\n    divider: {\n        'border-color': theme.background.main,\n    },\n}));\n\nconst ServiceList = props => {\n    const classes = useStyles();\n    const [services, setServiceList] = useState([]);\n    const [addingService, setAddingService] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(1);\n    const [cookies] = useCookies(['username']);\n    const style = listItemClass();\n\n    const getServices = async () => {\n        const response = await axios.get(`/user/${props.username}/services`);\n        setServiceList(response.data.result);\n    };\n\n    useEffect(() => {\n        getServices();\n    }, [props]);\n\n    const addedService = () => {\n        getServices();\n        toast.success('Added Service');\n        setAddingService(false);\n    };\n\n    const handleListItemClick = (e, index) => {\n        console.log(e);\n        console.log(index);\n        setSelectedIndex(index);\n    };\n    const handleClose = () => {\n        setAddingService(false);\n    };\n\n    return (\n        <div className={classes.serviceList}>\n            <ToastContainer className={classes.toast} />\n            <List className={classes.rootList}>\n                {services\n                    ? services.map((service, index) => {\n                          return (\n                              <ListItem\n                                  key={index}\n                                  classes={style}\n                                  onClick={e => handleListItemClick(e, index)}\n                                  selected={selectedIndex == index}\n                                  divider={true}>\n                                  <ServiceCard\n                                      bookable={\n                                          cookies.username &&\n                                          cookies.username !== props.username\n                                      }\n                                      service={service}\n                                      index={index}\n                                      className={classes.serviceCard}\n                                      selected={selectedIndex == index}\n                                      expand={true}\n                                  />\n                              </ListItem>\n                          );\n                      })\n                    : null}\n            </List>\n            {cookies.username && cookies.username === props.username ? (\n                <div>\n                    <Modal\n                        className={classes.modal}\n                        open={addingService}\n                        onClose={handleClose}>\n                        <AddService addedService={addedService} />\n                    </Modal>\n                    <div\n                        className={classes.buttonContainer}\n                        data-cy=\"addNewServiceDiv\">\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            onClick={() => setAddingService(true)}>\n                            Add Service\n                        </Button>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nconst UserInfo = ({ user }) => {\n    const classes = useStyles();\n\n    useEffect(() => {}, [user]);\n    return (\n        <div className={classes.root}>\n            {user ? (\n                <div className={classes.userContainer}>\n                    <Paper elevation={8} className={classes.userDesc}>\n                        <ProfilePicture username={user.username} />\n                        <Typography\n                            className={\n                                classes.username\n                            }>{`@${user.username}`}</Typography>\n\n                        <Typography className={classes.bio} color=\"textPrimary\">\n                            {user.bio}\n                        </Typography>\n                    </Paper>\n                    <div className={classes.servicesTitle}>\n                        <Typography>{`My Services:`}</Typography>\n                    </div>\n                    <ServiceList username={user.username} />\n                </div>\n            ) : (\n                <Typography>User Does Not Exist</Typography>\n            )}\n        </div>\n    );\n};\n\nexport default UserInfo;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport { Settings } from '@material-ui/icons/';\nimport ImageBoard from '../components/ImageBoard';\nimport UserInfo from '../components/UserInfo';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '90%',\n        width: '100%',\n        display: 'flex',\n        [theme.breakpoints.up('lg')]: {\n            'flex-direction': 'row',\n        },\n        [theme.breakpoints.down('xs')]: {\n            'flex-direction': 'column',\n        },\n    },\n    accountBtn: {\n        position: 'absolute',\n        top: 50,\n        right: 0,\n        '&:hover': {},\n    },\n    settingsIcon: {\n        height: '75px',\n        width: '75px',\n        color: 'white',\n    },\n}));\n\nconst Profile = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies(['username']);\n    const history = useHistory();\n    let { targetUsername } = useParams();\n    const [user, setUser] = useState({});\n    const toAccount = () => {\n        history.push('/account');\n    };\n    const displaySettings = () => {\n        return (\n            <IconButton\n                className={classes.accountBtn}\n                onClick={() => {\n                    toAccount();\n                }}>\n                <Settings className={classes.settingsIcon} />\n            </IconButton>\n        );\n    };\n\n    useEffect(() => {\n        const getUserInfo = async () => {\n            try {\n                let res = await axios.get(`/user/${targetUsername}`);\n                setUser(res.data.result);\n            } catch {\n                history.push('/');\n            }\n        };\n        if (targetUsername) getUserInfo();\n    }, [targetUsername]);\n\n    return (\n        <div className={classes.root}>\n            <UserInfo user={user} />\n            <ImageBoard username={targetUsername}></ImageBoard>\n\n            {cookies.username && cookies.username === targetUsername\n                ? displaySettings()\n                : null}\n        </div>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport './stylesheets/index.css';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {\n    makeStyles,\n    createMuiTheme,\n    Paper,\n    ThemeProvider,\n} from '@material-ui/core/';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport Appointment from './pages/Appointments';\nimport Account from './pages/Account';\nimport Profile from './pages/Profile';\nimport dotenv from 'dotenv';\nimport { useCookies } from 'react-cookie';\nimport 'react-toastify/dist/ReactToastify.css';\n\ndotenv.config();\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#647AA3',\n        },\n        secondary: {\n            main: '#EC5732',\n        },\n        default: {\n            main: '#FFF2EB',\n        },\n    },\n    background: {\n        dark: '#151515',\n        main: '#272727',\n    },\n    typography: {\n        fontFamily: ['Roboto'],\n    },\n});\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '100%',\n        height: '100%',\n        background: theme.background.dark,\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            display: 'none',\n        },\n        '.MuiInputBase-input': {\n            color: 'white',\n        },\n        '.MuiInputBase-root': {\n            color: 'white',\n        },\n        '.MuiInputLabel-root': {\n            color: 'white',\n        },\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    const [cookies] = useCookies();\n    const [username, setUsername] = useState();\n\n    useEffect(() => {\n        if (cookies.username && cookies.username !== 'undefined')\n            setUsername(cookies.username);\n    }, []);\n    return (\n        <ThemeProvider theme={theme}>\n            <Paper className={classes.container}>\n                <BrowserRouter>\n                    <Header username={username} />\n                    <Switch>\n                        <Route\n                            exact\n                            from=\"/\"\n                            render={props => <Home {...props} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/appointment\"\n                            render={props => <Appointment {...props} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={props => (\n                                <Login {...props} setUsername={setUsername} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/signup\"\n                            render={props => <SignUp {...props} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/account\"\n                            render={props => (\n                                <Account {...props} setUsername={setUsername} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path={`/profile/:targetUsername`}\n                            render={props => (\n                                <Profile {...props} setUsername={setUsername} />\n                            )}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </Paper>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_HOST;\naxios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}